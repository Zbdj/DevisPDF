{"ast":null,"code":"var _jsxFileName = \"/var/www/html/devis_sayse/src/views/test_input.js\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport ReactGoogleMapLoader from \"react-google-maps-loader\";\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\";\nimport geodist from 'geodist';\nconst API_KEY = \"AIzaSyAQU3x2PDxhLZEYFk4Af4HBPYDpy40aHEs\";\n\nclass GoogleSuggest extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      value: \"\",\n      value_2: \"\",\n      search_2: \"\",\n      first_adresse: {},\n      last_adresse: {},\n      result: false\n    };\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      search: e.target.value,\n      value: e.target.value,\n      result: false\n    });\n  }\n\n  handleInputChange_1(e) {\n    this.setState({\n      search_2: e.target.value,\n      value_2: e.target.value,\n      result: false\n    });\n  }\n\n  handleSelectSuggest(suggest) {\n    // console.log(suggest.formatted_address)\n    // console.log(suggest.geometry.viewport.ia.j)\n    var first_adresse = {\n      name: suggest.formatted_address,\n      lat: suggest.geometry.viewport.na.j,\n      lon: suggest.geometry.viewport.ia.j\n    };\n    this.setState({\n      search: \"\",\n      value: suggest.formatted_address,\n      first_adresse: first_adresse,\n      result: false\n    });\n  }\n\n  handleSelectSuggest_2(suggest) {\n    // console.log(suggest)\n    var last_adresse = {\n      name: suggest.formatted_address,\n      lat: suggest.geometry.viewport.na.j,\n      lon: suggest.geometry.viewport.ia.j\n    };\n    this.setState({\n      search_2: \"\",\n      value_2: suggest.formatted_address,\n      last_adresse: last_adresse,\n      result: true\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          search = _this$state.search,\n          value = _this$state.value,\n          value_2 = _this$state.value_2,\n          search_2 = _this$state.search_2; // console.log(this.state.first_adresse.name);\n    // console.log(this.state.last_adresse);\n\n    if (this.state.result !== false) {\n      var test = geodist(this.state.first_adresse, this.state.last_adresse, {\n        exact: true,\n        unit: 'meters'\n      }); // => 402.09212137829695\n\n      test = Math.round(test);\n      test = test / 1000; // alert(test/ 1000)\n\n      test = test.toString(); // console.log(test.substr(0, 1));\n\n      if (test.substr(0, 1) === 0) {\n        alert(\"Distance : \" + test + \" metres\");\n      } else {\n        alert(\"Distance : \" + test + \" km\");\n      }\n    }\n\n    return React.createElement(ReactGoogleMapLoader, {\n      params: {\n        key: API_KEY,\n        libraries: \"places,geocode\"\n      },\n      render: googleMaps => googleMaps && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(ReactGooglePlacesSuggest, {\n        autocompletionRequest: {\n          input: search\n        },\n        googleMaps: googleMaps,\n        onSelectSuggest: this.handleSelectSuggest.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: value,\n        placeholder: \"Addresse de d\\xE9part\",\n        onChange: this.handleInputChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(ReactGooglePlacesSuggest, {\n        autocompletionRequest: {\n          input: search_2\n        },\n        googleMaps: googleMaps,\n        onSelectSuggest: this.handleSelectSuggest_2.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: value_2,\n        placeholder: \"Adresse d'arriv\\xE9e\",\n        onChange: this.handleInputChange_1.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n  }\n\n}\n\nGoogleSuggest.propTypes = {\n  googleMaps: PropTypes.object\n};\nexport default GoogleSuggest;","map":{"version":3,"sources":["/var/www/html/devis_sayse/src/views/test_input.js"],"names":["PropTypes","React","ReactGoogleMapLoader","ReactGooglePlacesSuggest","geodist","API_KEY","GoogleSuggest","Component","state","search","value","value_2","search_2","first_adresse","last_adresse","result","handleInputChange","e","setState","target","handleInputChange_1","handleSelectSuggest","suggest","name","formatted_address","lat","geometry","viewport","na","j","lon","ia","handleSelectSuggest_2","render","test","exact","unit","Math","round","toString","substr","alert","key","libraries","googleMaps","input","bind","propTypes","object"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport ReactGoogleMapLoader from \"react-google-maps-loader\"\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\"\nimport geodist from'geodist'\n\nconst API_KEY = \"AIzaSyAQU3x2PDxhLZEYFk4Af4HBPYDpy40aHEs\"\nclass GoogleSuggest extends React.Component {\n  state = {\n    search: \"\",\n    value: \"\",\n    value_2: \"\",\n    search_2: \"\",\n    first_adresse: {},\n    last_adresse: {},\n    result : false,\n\n  }\n\n\n  handleInputChange(e) {\n    this.setState({search: e.target.value, value: e.target.value, result: false})\n  }\n  handleInputChange_1(e) {\n    this.setState({search_2: e.target.value, value_2: e.target.value, result: false})\n  }\n\n  handleSelectSuggest(suggest) {\n    // console.log(suggest.formatted_address)\n    // console.log(suggest.geometry.viewport.ia.j)\n    var first_adresse = {\n        name: suggest.formatted_address,\n        lat:suggest.geometry.viewport.na.j,\n        lon:suggest.geometry.viewport.ia.j,\n    }\n\n    this.setState({search: \"\", value: suggest.formatted_address, first_adresse: first_adresse , result: false})\n  }\n  handleSelectSuggest_2(suggest) {\n    // console.log(suggest)\n    var last_adresse = {\n        name: suggest.formatted_address,\n        lat:suggest.geometry.viewport.na.j,\n        lon:suggest.geometry.viewport.ia.j,\n    }\n    this.setState({search_2: \"\", value_2: suggest.formatted_address, last_adresse: last_adresse, result : true})\n  }\n\n  render() {\n    const {search, value, value_2, search_2} = this.state\n\n    // console.log(this.state.first_adresse.name);\n    // console.log(this.state.last_adresse);\n    if(this.state.result !== false){\n    var test = geodist(this.state.first_adresse, this.state.last_adresse, {exact: true, unit: 'meters'})     // => 402.09212137829695\n\n    test = Math.round(test);\n    test = test / 1000\n    // alert(test/ 1000)\n    test = test.toString();\n\n    // console.log(test.substr(0, 1));\n    if(test.substr(0, 1) === 0)\n    {\n        alert( \"Distance : \" + test + \" metres\")\n    }\n    else{\n        alert( \"Distance : \" + test + \" km\")\n    }\n    }\n\n    return (        \n      <ReactGoogleMapLoader\n        params={{\n          key: API_KEY,\n          libraries: \"places,geocode\",\n        }}\n        render={googleMaps =>\n          googleMaps && (\n            <div>\n              <ReactGooglePlacesSuggest\n                autocompletionRequest={{input: search}}\n                googleMaps={googleMaps}\n                onSelectSuggest={this.handleSelectSuggest.bind(this)}\n              >\n                <input\n                  type=\"text\"\n                  value={value}\n                  placeholder=\"Addresse de départ\"\n                  onChange={this.handleInputChange.bind(this)}\n                />\n              </ReactGooglePlacesSuggest>\n\n              <ReactGooglePlacesSuggest\n                autocompletionRequest={{input: search_2}}\n                googleMaps={googleMaps}\n                onSelectSuggest={this.handleSelectSuggest_2.bind(this)}\n              >\n                <input\n                  type=\"text\"\n                  value={value_2}\n                  placeholder=\"Adresse d'arrivée\"\n                  onChange={this.handleInputChange_1.bind(this)}\n                />\n              </ReactGooglePlacesSuggest>\n            </div>\n          )\n        }\n      />\n    )\n  }\n}\n\nGoogleSuggest.propTypes = {\n  googleMaps: PropTypes.object,\n}\n\nexport default GoogleSuggest"]},"metadata":{},"sourceType":"module"}