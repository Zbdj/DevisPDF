{"ast":null,"code":"var _jsxFileName = \"/var/www/html/devis_sayse/src/views/test.js\";\nimport React from \"react\";\nimport { Select, Icon, Button, Form, Input } from \"antd\";\nconst FormItem = Form.Item; // const TextArea = Input.TextArea;\n// const Option = Select.Option;\n// const SELECT = [\"opt1\", \"opt2\"];\n\nclass TestForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listKeys: [0]\n    };\n\n    this.remove = k => {\n      const listKeys = this.state.listKeys;\n\n      if (listKeys.length === 1) {\n        return;\n      }\n\n      this.setState({\n        listKeys: listKeys.filter(key => key !== k)\n      });\n    };\n\n    this.add = () => {\n      const listKeys = this.state.listKeys;\n      this.setState({\n        listKeys: [...listKeys, listKeys.length]\n      });\n    };\n  }\n\n  componentDidMount() {\n    const setFieldsValue = this.props.form.setFieldsValue; // WORK\n    // setFieldsValue({\n    //   name: 'test',\n    // });\n    // setFieldsValue({\n    //   name: 'test',\n    //   list: [\n    //     {\n    //       sub1: 'test1',\n    //       sub2: 'test2',\n    //     }\n    //   ]\n    // });\n    // !!!!!!!!!!!! NOT WORK\n    // setFieldsValue({\n    //   name: 'test',\n    //   list: [\n    //     {\n    //       sub1: 'test1',\n    //       sub2: 'opt2'\n    //     },\n    //     {\n    //       sub1: 'test11',\n    //       sub2: 'opt1'\n    //     }\n    //   ]\n    // });\n\n    setFieldsValue({// name: \"test\",\n      // list: [\n      //   {\n      //     sub1: \"test1\",\n      //     sub2: \"opt2\",\n      //     opt2sub: \"bla\"\n      //   },\n      //   {\n      //     sub1: \"test11\",\n      //     sub2: \"opt1\"\n      //   },\n      //   {\n      //     sub1: \"test3\",\n      //     sub2: \"opt2\",\n      //     opt2sub: \"bla\"\n      //   }\n      // ]\n    });\n  }\n\n  render() {\n    const _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n    const listKeys = this.state.listKeys;\n    return (// <Form onSubmit={this.handleSubmit}>\n      React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, listKeys.map((key, index) => {\n        const type = getFieldValue(\"list[\".concat(key, \"].sub2\"));\n        return React.createElement(\"div\", {\n          key: key,\n          className: \"col-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(FormItem, {\n          label: \"Sub1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, getFieldDecorator(\"list[\".concat(key, \"].sub1\"))(React.createElement(Input, {\n          placeholder: \"Sub1\",\n          style: {\n            width: '60%',\n            marginRight: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }))), type === \"opt2\" && React.createElement(FormItem, {\n          label: \"opt2sub\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, getFieldDecorator(\"list[\".concat(key, \"].opt2sub\"))(React.createElement(Input, {\n          placeholder: \"opt2sub\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }))), index > 0 && React.createElement(\"div\", {\n          className: \"col-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          className: \"dynamic-delete-button\",\n          type: \"minus-circle-o\",\n          style: {\n            width: '100%'\n          },\n          onClick: () => this.remove(key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        })));\n      }), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"dashed\",\n        onClick: this.add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Rajouter un champ\")), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nexport default Form.create()(TestForm);","map":{"version":3,"sources":["/var/www/html/devis_sayse/src/views/test.js"],"names":["React","Select","Icon","Button","Form","Input","FormItem","Item","TestForm","Component","state","listKeys","remove","k","length","setState","filter","key","add","componentDidMount","setFieldsValue","props","form","render","getFieldDecorator","getFieldValue","map","index","type","width","marginRight","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Select, Icon, Button, Form, Input } from \"antd\";\n\nconst FormItem = Form.Item;\n// const TextArea = Input.TextArea;\n// const Option = Select.Option;\n\n// const SELECT = [\"opt1\", \"opt2\"];\n\nclass TestForm extends React.Component {\n  state = {\n    listKeys: [0]\n  };\n\n  componentDidMount() {\n    const {\n      form: { setFieldsValue }\n    } = this.props;\n\n    // WORK\n    // setFieldsValue({\n    //   name: 'test',\n    // });\n\n    // setFieldsValue({\n    //   name: 'test',\n    //   list: [\n    //     {\n    //       sub1: 'test1',\n    //       sub2: 'test2',\n    //     }\n    //   ]\n    // });\n\n    // !!!!!!!!!!!! NOT WORK\n    // setFieldsValue({\n    //   name: 'test',\n    //   list: [\n    //     {\n    //       sub1: 'test1',\n    //       sub2: 'opt2'\n    //     },\n    //     {\n    //       sub1: 'test11',\n    //       sub2: 'opt1'\n    //     }\n    //   ]\n    // });\n\n    setFieldsValue({\n      // name: \"test\",\n      // list: [\n      //   {\n      //     sub1: \"test1\",\n      //     sub2: \"opt2\",\n      //     opt2sub: \"bla\"\n      //   },\n      //   {\n      //     sub1: \"test11\",\n      //     sub2: \"opt1\"\n      //   },\n      //   {\n      //     sub1: \"test3\",\n      //     sub2: \"opt2\",\n      //     opt2sub: \"bla\"\n      //   }\n      // ]\n    });\n  }\n\n  remove = k => {\n    const { listKeys } = this.state;\n\n    if (listKeys.length === 1) {\n      return;\n    }\n\n    this.setState({\n      listKeys: listKeys.filter(key => key !== k)\n    });\n  };\n\n  add = () => {\n    const { listKeys } = this.state;\n\n    this.setState({\n      listKeys: [...listKeys, listKeys.length]\n    });\n  };\n\n  render() {\n    const {\n      form: { getFieldDecorator, getFieldValue }\n    } = this.props;\n    const { listKeys } = this.state;\n\n    return (\n      // <Form onSubmit={this.handleSubmit}>\n      <div className=\"container\">\n        {listKeys.map((key, index) => {\n          const type = getFieldValue(`list[${key}].sub2`);\n\n          return (\n            <div key={key} className=\"col-8\">\n            \n              <FormItem label=\"Sub1\">\n                {getFieldDecorator(`list[${key}].sub1`)(\n                  <Input placeholder=\"Sub1\" style={{ width: '60%', marginRight: 8 }}/>\n                )}\n              </FormItem>\n\n              {type === \"opt2\" && (\n                <FormItem label=\"opt2sub\">\n                  {getFieldDecorator(`list[${key}].opt2sub`)(\n                    <Input placeholder=\"opt2sub\"/>\n                  )}\n                </FormItem>\n              )}\n              {index > 0 && (\n                <div className=\"col-3\">\n                <Icon\n                  className=\"dynamic-delete-button\"\n                  type=\"minus-circle-o\" style={{ width: '100%' }}\n                  onClick={() => this.remove(key)}\n                />\n                </div>\n              )}\n            </div>\n          );\n        })}\n        <FormItem>\n          <Button type=\"dashed\" onClick={this.add}>\n            {/* <Icon type=\"plus\" /> */}\n            Rajouter un champ\n          </Button>\n        </FormItem>\n        <FormItem>\n\n        </FormItem>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(TestForm);"]},"metadata":{},"sourceType":"module"}