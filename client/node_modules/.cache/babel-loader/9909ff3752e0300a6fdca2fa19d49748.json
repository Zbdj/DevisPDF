{"ast":null,"code":"// Generated by CoffeeScript 1.4.0\nvar getDistance, getEarthRadius, parseCoordinates, radiusUnits;\nradiusUnits = {\n  'feet': 20908800,\n  'yards': 6969600,\n  'miles': 3960,\n  'mi': 3960,\n  'kilometers': 6371,\n  'km': 6371,\n  'meters': 6371000\n};\n\ngetDistance = function getDistance(start, end, options) {\n  var a, c, distance, earthRadius, lat1, lat1Rad, lat2, lat2Rad, latDelta, lon1, lon2, lonDelta, _ref, _ref1;\n\n  if (options == null) {\n    options = {};\n  }\n\n  _ref = parseCoordinates(start), lat1 = _ref[0], lon1 = _ref[1];\n  _ref1 = parseCoordinates(end), lat2 = _ref1[0], lon2 = _ref1[1];\n  earthRadius = getEarthRadius(options.unit);\n  latDelta = (lat2 - lat1) * Math.PI / 180;\n  lonDelta = (lon2 - lon1) * Math.PI / 180;\n  lat1Rad = lat1 * Math.PI / 180;\n  lat2Rad = lat2 * Math.PI / 180;\n  a = Math.sin(latDelta / 2) * Math.sin(latDelta / 2) + Math.sin(lonDelta / 2) * Math.sin(lonDelta / 2) * Math.cos(lat1Rad) * Math.cos(lat2Rad);\n  c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  distance = earthRadius * c;\n\n  if (!options.exact) {\n    distance = Math.floor(distance);\n  }\n\n  if (options.limit) {\n    if (options.limit > distance) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  if (options.format) {\n    distance = \"\" + distance + \" \" + (options.unit || 'miles');\n  }\n\n  return distance;\n};\n\nparseCoordinates = function parseCoordinates(point) {\n  var coords, key, val;\n\n  if (point == null) {\n    point = [0, 0];\n  }\n\n  coords = [];\n\n  if (Array.isArray(point)) {\n    coords = point;\n  } else if (point.lat != null && point.lon != null) {\n    coords = [point.lat, point.lon];\n  } else if (typeof point === 'object') {\n    for (key in point) {\n      val = point[key];\n      coords.push(val);\n    }\n  } else {\n    coords = point;\n  }\n\n  return coords;\n};\n\ngetEarthRadius = function getEarthRadius(unit) {\n  if (unit == null) {\n    unit = \"miles\";\n  }\n\n  unit = unit.toLowerCase();\n\n  if (!radiusUnits[unit]) {\n    unit = \"miles\";\n  }\n\n  return radiusUnits[unit];\n};\n\nmodule.exports = getDistance;","map":null,"metadata":{},"sourceType":"script"}