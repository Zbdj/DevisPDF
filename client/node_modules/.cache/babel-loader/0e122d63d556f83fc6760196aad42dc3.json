{"ast":null,"code":"var _jsxFileName = \"/var/www/html/devis_sayse/src/views/test_input.js\";\nimport React, { Component } from 'react';\nimport { AutoComplete } from 'antd';\nexport default class TestInput extends Component {\n  componentDidMount() {}\n\n  render() {\n    var dataSource = ['Burns Bay Road', 'Downing Street', 'Wall Street'];\n    return React.createElement(AutoComplete, {\n      style: {\n        width: 200\n      },\n      dataSource: dataSource,\n      placeholder: \"try to type `b`\",\n      filterOption: (inputValue, option) => option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  }\n\n} // ReactDOM.render(<Complete />, mountNode);","map":{"version":3,"sources":["/var/www/html/devis_sayse/src/views/test_input.js"],"names":["React","Component","AutoComplete","TestInput","componentDidMount","render","dataSource","width","inputValue","option","props","children","toUpperCase","indexOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,YAAT,QAA6B,MAA7B;AAEA,eAAe,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAG7CG,EAAAA,iBAAiB,GAAG,CAEnB;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,UAAU,GAAG,CAAC,gBAAD,EAAmB,gBAAnB,EAAqC,aAArC,CAAjB;AAEA,WACI,oBAAC,YAAD;AACI,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OADX;AAEI,MAAA,UAAU,EAAED,UAFhB;AAGI,MAAA,WAAW,EAAC,iBAHhB;AAII,MAAA,YAAY,EAAE,CAACE,UAAD,EAAaC,MAAb,KACVA,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBC,WAAtB,GAAoCC,OAApC,CAA4CL,UAAU,CAACI,WAAX,EAA5C,MAA0E,CAAC,CALnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH;;AApB4C,C,CAuBjD","sourcesContent":["import React, { Component } from 'react';\n\nimport { AutoComplete } from 'antd';\n\nexport default class TestInput extends Component {\n\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        var dataSource = ['Burns Bay Road', 'Downing Street', 'Wall Street'];\n\n        return (\n            <AutoComplete\n                style={{ width: 200 }}\n                dataSource={dataSource}\n                placeholder=\"try to type `b`\"\n                filterOption={(inputValue, option) =>\n                    option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n                }\n            />\n        );\n    }\n}\n\n// ReactDOM.render(<Complete />, mountNode);"]},"metadata":{},"sourceType":"module"}