{"ast":null,"code":"var _jsxFileName = \"/var/www/html/devis_sayse/src/views/test.js\";\nimport React, { Component } from 'react';\nimport { Form, Input, Icon, Button } from 'antd';\nimport obj from '../assets/data.json';\nimport Service from '../components/Devis/inputService';\nlet id = 0;\n\nclass DynamicFieldSet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.remove = k => {\n      const form = this.props.form; // can use data-binding to get\n\n      const keys = form.getFieldValue('keys'); // We need at least one passenger\n\n      if (keys.length === 1) {\n        return;\n      } // can use data-binding to set\n\n\n      form.setFieldsValue({\n        keys: keys.filter(key => key !== k)\n      });\n    };\n\n    this.add = () => {\n      const form = this.props.form; // can use data-binding to get\n\n      const keys = form.getFieldValue('keys');\n      const nextKeys = keys.concat(id++); // can use data-binding to set\n      // important! notify form to detect changes\n\n      form.setFieldsValue({\n        keys: nextKeys\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          const keys = values.keys,\n                names = values.names;\n          console.log('Received values of form: ', values);\n          console.log('Merged values:', keys.map(key => names[key]));\n        }\n      });\n    };\n\n    this.state = {\n      data_service: [],\n      list_service: undefined,\n      text_service: \"\",\n      price_abo: '',\n      marge: '',\n      scroll_service: {\n        overflowY: 'scroll'\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data_service: obj\n    }, () => {});\n  }\n\n  //----------------------------------------------------------------------------------------------------------------------------------------------------------\n  searchDataService(e) {\n    //indexOf(e.target.value) !== -1\n    var queryData = [];\n\n    if (e.target.value !== '') {\n      this.setState({\n        scroll_service: {\n          overflowY: 'scroll',\n          height: '250px',\n          width: '265px'\n        }\n      }); // this.state.data.forEach(function (person) {\n\n      for (let i = 0; i < this.state.data_service.length; i++) {\n        if (this.state.data_service[i].Designation_solution !== null) {\n          if (this.state.data_service[i].Designation_solution.trim().toLowerCase().match(e.target.value)) {\n            // if (this.state.data[i].Designation_solution.trim().toLowerCase().indexOf(e.target.value) !== -1) {\n            // if (queryData.length < 15) {\n            queryData.push(this.state.data_service[i]); // }\n            // }\n          }\n        }\n      }\n    } else {\n      this.setState({\n        scroll_service: {\n          overflowY: 'scroll'\n        }\n      });\n    }\n\n    this.setState({\n      list_service: queryData\n    });\n    this.setState({\n      text_service: e.target.value\n    });\n  }\n\n  selectService(value, e) {\n    this.setState({\n      text_service: value.Designation_solution,\n      price_abo: value.Abo_mois_ht,\n      marge: value.FAS_HT,\n      list_service: [],\n      scroll_service: {\n        overflowY: 'scroll'\n      }\n    });\n    return null;\n  }\n\n  searchPrice(e) {\n    this.setState({\n      price_abo: e.target.value\n    });\n  } //----------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  render() {\n    const _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 4\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 20\n        }\n      }\n    };\n    const formItemLayoutWithOutLabel = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 20,\n          offset: 4\n        }\n      }\n    };\n    getFieldDecorator('keys', {\n      initialValue: []\n    });\n    const keys = getFieldValue('keys');\n    const formItems = keys.map((k, index) => React.createElement(Form.Item, Object.assign({}, index === 0 ? formItemLayout : formItemLayoutWithOutLabel, {\n      label: index === 0 ? 'Passengers' : '',\n      required: false,\n      key: k,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), getFieldDecorator(\"names[\".concat(k, \"]\"), {\n      validateTrigger: ['onChange', 'onBlur'],\n      rules: [{\n        required: true,\n        whitespace: true,\n        message: \"Please input passenger's name or delete this field.\"\n      }]\n    })(React.createElement(Service, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), keys.length > 1 ? React.createElement(Icon, {\n      className: \"dynamic-delete-button\",\n      type: \"minus-circle-o\",\n      onClick: () => this.remove(k),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }) : null));\n    return (// <Form onSubmit={this.handleSubmit}>\n      //   {formItems}\n      //   <Form.Item {...formItemLayoutWithOutLabel}>\n      // <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\n      //   <Icon type=\"plus\"/> \n      //   Ajouter un service\n      // </Button>\n      //   </Form.Item>\n      //   <Form.Item {...formItemLayoutWithOutLabel}>\n      //     <Button type=\"primary\" htmlType=\"submit\" >\n      //       Ajouter\n      //     </Button>\n      //   </Form.Item>\n      // </Form>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, formItems, React.createElement(Button, {\n        type: \"dashed\",\n        onClick: this.add,\n        style: {\n          width: '60%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), \"Ajouter un service\"))\n    );\n  }\n\n}\n\nconst WrappedDynamicFieldSet = Form.create({\n  name: 'dynamic_form_item'\n})(DynamicFieldSet);\nexport default WrappedDynamicFieldSet; // ReactDOM.render(<WrappedDynamicFieldSet />, mountNode);","map":{"version":3,"sources":["/var/www/html/devis_sayse/src/views/test.js"],"names":["React","Component","Form","Input","Icon","Button","obj","Service","id","DynamicFieldSet","constructor","props","remove","k","form","keys","getFieldValue","length","setFieldsValue","filter","key","add","nextKeys","concat","handleSubmit","e","preventDefault","validateFields","err","values","names","console","log","map","state","data_service","list_service","undefined","text_service","price_abo","marge","scroll_service","overflowY","componentDidMount","setState","searchDataService","queryData","target","value","height","width","i","Designation_solution","trim","toLowerCase","match","push","selectService","Abo_mois_ht","FAS_HT","searchPrice","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","initialValue","formItems","index","validateTrigger","rules","required","whitespace","message","WrappedDynamicFieldSet","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Icon, Button } from 'antd';\nimport obj from '../assets/data.json'\nimport Service from '../components/Devis/inputService'\nlet id = 0;\n\nclass DynamicFieldSet extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data_service: [],\n      list_service: undefined,\n      text_service: \"\",\n      price_abo: '',\n      marge: '',\n      scroll_service: { overflowY: 'scroll' }\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ data_service: obj }, () => {\n\n    })\n\n  }\n\n  remove = k => {\n    const { form } = this.props;\n    // can use data-binding to get\n    const keys = form.getFieldValue('keys');\n    // We need at least one passenger\n    if (keys.length === 1) {\n      return;\n    }\n\n    // can use data-binding to set\n    form.setFieldsValue({\n      keys: keys.filter(key => key !== k),\n    });\n  };\n\n  add = () => {\n    const { form } = this.props;\n    // can use data-binding to get\n    const keys = form.getFieldValue('keys');\n    const nextKeys = keys.concat(id++);\n    // can use data-binding to set\n    // important! notify form to detect changes\n    form.setFieldsValue({\n      keys: nextKeys,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const { keys, names } = values;\n        console.log('Received values of form: ', values);\n        console.log('Merged values:', keys.map(key => names[key]));\n      }\n    });\n  };\n\n  //----------------------------------------------------------------------------------------------------------------------------------------------------------\n  searchDataService(e) {\n    //indexOf(e.target.value) !== -1\n    var queryData = [];\n\n\n    if (e.target.value !== '') {\n      this.setState({ scroll_service: { overflowY: 'scroll', height: '250px', width: '265px' } })\n\n      // this.state.data.forEach(function (person) {\n      for (let i = 0; i < this.state.data_service.length; i++) {\n\n        if (this.state.data_service[i].Designation_solution !== null) {\n          if (this.state.data_service[i].Designation_solution.trim().toLowerCase().match(e.target.value)) {\n\n            // if (this.state.data[i].Designation_solution.trim().toLowerCase().indexOf(e.target.value) !== -1) {\n            // if (queryData.length < 15) {\n            queryData.push(this.state.data_service[i]);\n\n            // }\n            // }\n          }\n\n        }\n      }\n\n    }\n    else {\n      this.setState({ scroll_service: { overflowY: 'scroll' } })\n    }\n\n    this.setState({\n      list_service: queryData\n    });\n    this.setState({\n      text_service: e.target.value\n    })\n\n\n  }\n\n  selectService(value, e) {\n\n    this.setState({\n      text_service: value.Designation_solution,\n      price_abo: value.Abo_mois_ht,\n      marge: value.FAS_HT,\n      list_service: [],\n      scroll_service: { overflowY: 'scroll' }\n    })\n\n    return (\n      null\n    );\n  }\n\n\n  searchPrice(e) {\n    this.setState({\n      price_abo: e.target.value\n    })\n  }\n  //----------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  render() {\n\n\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 20 },\n      },\n    };\n    const formItemLayoutWithOutLabel = {\n      wrapperCol: {\n        xs: { span: 24, offset: 0 },\n        sm: { span: 20, offset: 4 },\n      },\n    };\n    getFieldDecorator('keys', { initialValue: [] });\n    const keys = getFieldValue('keys');\n    const formItems = keys.map((k, index) => (\n      <Form.Item\n        {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n        label={index === 0 ? 'Passengers' : ''}\n        required={false}\n        key={k}\n      >\n        {getFieldDecorator(`names[${k}]`, {\n          validateTrigger: ['onChange', 'onBlur'],\n          rules: [\n            {\n              required: true,\n              whitespace: true,\n              message: \"Please input passenger's name or delete this field.\",\n            },\n          ],\n        })(\n          <Service />\n        )}\n        {keys.length > 1 ? (\n          <Icon\n            className=\"dynamic-delete-button\"\n            type=\"minus-circle-o\"\n            onClick={() => this.remove(k)}\n          />\n        ) : null}\n      </Form.Item>\n    ));\n    return (\n      // <Form onSubmit={this.handleSubmit}>\n      //   {formItems}\n      //   <Form.Item {...formItemLayoutWithOutLabel}>\n      // <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\n      //   <Icon type=\"plus\"/> \n      //   Ajouter un service\n      // </Button>\n      //   </Form.Item>\n      //   <Form.Item {...formItemLayoutWithOutLabel}>\n      //     <Button type=\"primary\" htmlType=\"submit\" >\n      //       Ajouter\n      //     </Button>\n      //   </Form.Item>\n      // </Form>\n      <div>\n        {formItems}\n        <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\n          <Icon type=\"plus\" />\n          Ajouter un service\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst WrappedDynamicFieldSet = Form.create({ name: 'dynamic_form_item' })(DynamicFieldSet);\nexport default WrappedDynamicFieldSet;\n// ReactDOM.render(<WrappedDynamicFieldSet />, mountNode);"]},"metadata":{},"sourceType":"module"}