{"ast":null,"code":"var _jsxFileName = \"/var/www/html/devis_sayse/src/views/test.js\";\nimport React from \"react\";\nimport { Select, Icon, Button, Form, Input } from \"antd\";\nconst FormItem = Form.Item;\nconst TextArea = Input.TextArea;\nconst Option = Select.Option;\nconst SELECT = [\"opt1\", \"opt2\"];\n\nclass TestForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listKeys: [0]\n    };\n\n    this.remove = k => {\n      const listKeys = this.state.listKeys;\n\n      if (listKeys.length === 1) {\n        return;\n      }\n\n      this.setState({\n        listKeys: listKeys.filter(key => key !== k)\n      });\n    };\n\n    this.add = () => {\n      const listKeys = this.state.listKeys;\n      this.setState({\n        listKeys: [...listKeys, listKeys.length]\n      });\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          setFieldsValue = _this$props.form.setFieldsValue,\n          listKeys = _this$props.listKeys;\n    this.setState({\n      listKeys\n    }); // WORK\n    // setFieldsValue({\n    //   name: 'test',\n    // });\n    // setFieldsValue({\n    //   name: 'test',\n    //   list: [\n    //     {\n    //       sub1: 'test1',\n    //       sub2: 'test2',\n    //     }\n    //   ]\n    // });\n    // !!!!!!!!!!!! NOT WORK\n    // setFieldsValue({\n    //   name: 'test',\n    //   list: [\n    //     {\n    //       sub1: 'test1',\n    //       sub2: 'opt2'\n    //     },\n    //     {\n    //       sub1: 'test11',\n    //       sub2: 'opt1'\n    //     }\n    //   ]\n    // });\n\n    setFieldsValue({\n      name: \"test\",\n      list: [{\n        sub1: \"test1\",\n        sub2: \"opt2\",\n        opt2sub: \"bla\"\n      }, {\n        sub1: \"test11\",\n        sub2: \"opt1\"\n      }, {\n        sub1: \"test3\",\n        sub2: \"opt2\",\n        opt2sub: \"bla\"\n      }]\n    });\n  }\n\n  render() {\n    const _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n    const listKeys = this.state.listKeys;\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      label: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, getFieldDecorator(\"name\")(React.createElement(Input, {\n      placeholder: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))), listKeys.map((key, index) => {\n      const type = getFieldValue(\"list[\".concat(key, \"].sub2\"));\n      return React.createElement(\"div\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        label: \"Sub1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, getFieldDecorator(\"list[\".concat(key, \"].sub1\"))(React.createElement(Input, {\n        placeholder: \"Sub1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        label: \"Sub2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, getFieldDecorator(\"list[\".concat(key, \"].sub2\"), {\n        initialValue: \"opt1\"\n      })(React.createElement(Select, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, SELECT.map(item => React.createElement(Option, {\n        key: item,\n        value: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, item))))), type === \"opt2\" && React.createElement(FormItem, {\n        label: \"opt2sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, getFieldDecorator(\"list[\".concat(key, \"].opt2sub\"))(React.createElement(Input, {\n        placeholder: \"opt2sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))), index > 0 && React.createElement(Icon, {\n        className: \"dynamic-delete-button\",\n        type: \"minus-circle-o\",\n        onClick: () => this.remove(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }));\n    }), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"dashed\",\n      onClick: this.add,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), \"Add field\")), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Form.create()(TestForm);","map":{"version":3,"sources":["/var/www/html/devis_sayse/src/views/test.js"],"names":["React","Select","Icon","Button","Form","Input","FormItem","Item","TextArea","Option","SELECT","TestForm","Component","state","listKeys","remove","k","length","setState","filter","key","add","componentDidMount","props","setFieldsValue","form","name","list","sub1","sub2","opt2sub","render","getFieldDecorator","getFieldValue","handleSubmit","map","index","type","initialValue","item","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Select, Icon, Button, Form, Input } from \"antd\";\n\nconst FormItem = Form.Item;\nconst TextArea = Input.TextArea;\nconst Option = Select.Option;\n\nconst SELECT = [\"opt1\", \"opt2\"];\n\nclass TestForm extends React.Component {\n  state = {\n    listKeys: [0]\n  };\n\n  componentDidMount() {\n\n\n    const {\n      form: { setFieldsValue },\n      listKeys,\n    } = this.props;\n    this.setState({listKeys})\n\n    // WORK\n    // setFieldsValue({\n    //   name: 'test',\n    // });\n\n    // setFieldsValue({\n    //   name: 'test',\n    //   list: [\n    //     {\n    //       sub1: 'test1',\n    //       sub2: 'test2',\n    //     }\n    //   ]\n    // });\n\n    // !!!!!!!!!!!! NOT WORK\n    // setFieldsValue({\n    //   name: 'test',\n    //   list: [\n    //     {\n    //       sub1: 'test1',\n    //       sub2: 'opt2'\n    //     },\n    //     {\n    //       sub1: 'test11',\n    //       sub2: 'opt1'\n    //     }\n    //   ]\n    // });\n\n    setFieldsValue({\n      name: \"test\",\n      list: [\n        {\n          sub1: \"test1\",\n          sub2: \"opt2\",\n          opt2sub: \"bla\"\n        },\n        {\n          sub1: \"test11\",\n          sub2: \"opt1\"\n        },\n        {\n          sub1: \"test3\",\n          sub2: \"opt2\",\n          opt2sub: \"bla\"\n        }\n      ]\n    });\n  }\n\n  remove = k => {\n    const { listKeys } = this.state;\n\n    if (listKeys.length === 1) {\n      return;\n    }\n\n    this.setState({\n      listKeys: listKeys.filter(key => key !== k)\n    });\n  };\n\n  add = () => {\n    const { listKeys } = this.state;\n\n    this.setState({\n      listKeys: [...listKeys, listKeys.length]\n    });\n  };\n\n  render() {\n    const {\n      form: { getFieldDecorator, getFieldValue }\n    } = this.props;\n    const { listKeys } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormItem label=\"Name\">\n          {getFieldDecorator(\"name\")(<Input placeholder=\"name\" />)}\n        </FormItem>\n        {listKeys.map((key, index) => {\n          const type = getFieldValue(`list[${key}].sub2`);\n\n          return (\n            <div key={key}>\n              <FormItem label=\"Sub1\">\n                {getFieldDecorator(`list[${key}].sub1`)(\n                  <Input placeholder=\"Sub1\" />\n                )}\n              </FormItem>\n              <FormItem label=\"Sub2\">\n                {getFieldDecorator(`list[${key}].sub2`, {\n                  initialValue: \"opt1\"\n                })(\n                  <Select>\n                    {SELECT.map(item => (\n                      <Option key={item} value={item}>\n                        {item}\n                      </Option>\n                    ))}\n                  </Select>\n                )}\n              </FormItem>\n              {type === \"opt2\" && (\n                <FormItem label=\"opt2sub\">\n                  {getFieldDecorator(`list[${key}].opt2sub`)(\n                    <Input placeholder=\"opt2sub\" />\n                  )}\n                </FormItem>\n              )}\n              {index > 0 && (\n                <Icon\n                  className=\"dynamic-delete-button\"\n                  type=\"minus-circle-o\"\n                  onClick={() => this.remove(key)}\n                />\n              )}\n            </div>\n          );\n        })}\n        <FormItem>\n          <Button type=\"dashed\" onClick={this.add}>\n            <Icon type=\"plus\" />Add field\n          </Button>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nexport default Form.create()(TestForm);\n"]},"metadata":{},"sourceType":"module"}