{"ast":null,"code":"var _jsxFileName = \"/var/www/html/devis_sayse/src/views/test.js\";\n// import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import deburr from 'lodash/deburr';\n// import Downshift from 'downshift';\n// import { withStyles } from '@material-ui/core/styles';\n// import TextField from '@material-ui/core/TextField';\n// import Paper from '@material-ui/core/Paper';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import Chip from '@material-ui/core/Chip';\n// const suggestions = [\n//   { label: 'Afghanistan' },\n//   { label: 'Aland Islands' },\n//   { label: 'Albania' },\n//   { label: 'Algeria' },\n//   { label: 'American Samoa' },\n//   { label: 'Andorra' },\n//   { label: 'Angola' },\n//   { label: 'Anguilla' },\n//   { label: 'Antarctica' },\n//   { label: 'Antigua and Barbuda' },\n//   { label: 'Argentina' },\n//   { label: 'Armenia' },\n//   { label: 'Aruba' },\n//   { label: 'Australia' },\n//   { label: 'Austria' },\n//   { label: 'Azerbaijan' },\n//   { label: 'Bahamas' },\n//   { label: 'Bahrain' },\n//   { label: 'Bangladesh' },\n//   { label: 'Barbados' },\n//   { label: 'Belarus' },\n//   { label: 'Belgium' },\n//   { label: 'Belize' },\n//   { label: 'Benin' },\n//   { label: 'Bermuda' },\n//   { label: 'Bhutan' },\n//   { label: 'Bolivia, Plurinational State of' },\n//   { label: 'Bonaire, Sint Eustatius and Saba' },\n//   { label: 'Bosnia and Herzegovina' },\n//   { label: 'Botswana' },\n//   { label: 'Bouvet Island' },\n//   { label: 'Brazil' },\n//   { label: 'British Indian Ocean Territory' },\n//   { label: 'Brunei Darussalam' },\n// ];\n// function renderInput(inputProps) {\n//   const { InputProps, classes, ref, ...other } = inputProps;\n//   return (\n//     <TextField\n//       InputProps={{\n//         inputRef: ref,\n//         classes: {\n//           root: classes.inputRoot,\n//           input: classes.inputInput,\n//         },\n//         ...InputProps,\n//       }}\n//       {...other}\n//     />\n//   );\n// }\n// function renderSuggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem }) {\n//   const isHighlighted = highlightedIndex === index;\n//   const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n//   return (\n//     <MenuItem\n//       {...itemProps}\n//       key={suggestion.label}\n//       selected={isHighlighted}\n//       component=\"div\"\n//       style={{\n//         fontWeight: isSelected ? 500 : 400,\n//       }}\n//     >\n//       {suggestion.label}\n//     </MenuItem>\n//   );\n// }\n// function getSuggestions(value) {\n//   const inputValue = deburr(value.trim()).toLowerCase();\n//   const inputLength = inputValue.length;\n//   let count = 0;\n//   return inputLength === 0\n//     ? []\n//     : suggestions.filter(suggestion => {\n//         const keep =\n//           count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n//         if (keep) {\n//           count += 1;\n//         }\n//         return keep;\n//       });\n// }\n// class DownshiftMultiple extends Component {\n//   state = {\n//     inputValue: '',\n//     selectedItem: [],\n//   };\n//   // handleKeyDown = event => {\n//   //   const { inputValue, selectedItem } = this.state;\n//   //   if (selectedItem.length && !inputValue.length && event.key === 'Backspace') {\n//   //     this.setState({\n//   //       selectedItem: selectedItem.slice(0, selectedItem.length - 1),\n//   //     });\n//   //   }\n//   // };\n//   handleInputChange = event => {\n//     this.setState({ inputValue: event.target.value });\n//   };\n//   handleChange = item => {\n//     let { selectedItem } = this.state;\n//     if (selectedItem.indexOf(item) === -1) {\n//       selectedItem = [...selectedItem, item];\n//     }\n//     this.setState({\n//       inputValue: '',\n//       selectedItem,\n//     });\n//   };\n//   // handleDelete = item => () => {\n//   //   this.setState(state => {\n//   //     const selectedItem = [...state.selectedItem];\n//   //     selectedItem.splice(selectedItem.indexOf(item), 1);\n//   //     return { selectedItem };\n//   //   });\n//   // };\n//   render() {\n//     const { classes } = this.props;\n//     const { inputValue, selectedItem } = this.state;\n//     return (\n//       <Downshift\n//         id=\"downshift-multiple\"\n//         inputValue={inputValue}\n//         onChange={this.handleChange}\n//         selectedItem={selectedItem}\n//       >\n//         {({\n//           getInputProps,\n//           getItemProps,\n//           isOpen,\n//           inputValue: inputValue2,\n//           selectedItem: selectedItem2,\n//           highlightedIndex,\n//         }) => (\n//           <div className={classes.container}>\n//             {renderInput({\n//               fullWidth: true,\n//               classes,\n//               InputProps: getInputProps({\n//                 startAdornment: selectedItem.map(item => (\n//                   <Chip\n//                     key={item}\n//                     tabIndex={-1}\n//                     label={item}\n//                     className={classes.chip}\n//                     onDelete={this.handleDelete(item)}\n//                   />\n//                 )),\n//                 onChange: this.handleInputChange,\n//                 onKeyDown: this.handleKeyDown,\n//                 placeholder: 'Select multiple countries',\n//               }),\n//               label: 'Label',\n//             })}\n//             {isOpen ? (\n//               <Paper className={classes.paper} square>\n//                 {getSuggestions(inputValue2).map((suggestion, index) =>\n//                   renderSuggestion({\n//                     suggestion,\n//                     index,\n//                     itemProps: getItemProps({ item: suggestion.label }),\n//                     highlightedIndex,\n//                     selectedItem: selectedItem2,\n//                   }),\n//                 )}\n//               </Paper>\n//             ) : null}\n//           </div>\n//         )}\n//       </Downshift>\n//     );\n//   }\n// }\n// DownshiftMultiple.propTypes = {\n//   classes: PropTypes.object.isRequired,\n// };\n// const styles = theme => ({\n//   root: {\n//     flexGrow: 1,\n//     height: 250,\n//   },\n//   container: {\n//     flexGrow: 1,\n//     position: 'relative',\n//   },\n//   paper: {\n//     position: 'absolute',\n//     zIndex: 1,\n//     marginTop: theme.spacing.unit,\n//     left: 0,\n//     right: 0,\n//   },\n//   chip: {\n//     margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n//   },\n//   inputRoot: {\n//     flexWrap: 'wrap',\n//   },\n//   inputInput: {\n//     width: 'auto',\n//     flexGrow: 1,\n//   },\n//   divider: {\n//     height: theme.spacing.unit * 2,\n//   },\n// });\n// function IntegrationDownshift(props) {\n//   const { classes } = props;\n//   return (\n//     <div className={classes.root}>\n//       <Downshift id=\"downshift-simple\">\n//         {({\n//           getInputProps,\n//           getItemProps,\n//           getMenuProps,\n//           highlightedIndex,\n//           inputValue,\n//           isOpen,\n//           selectedItem,\n//         }) => (\n//           <div className={classes.container}>\n//             {renderInput({\n//               fullWidth: true,\n//               classes,\n//               InputProps: getInputProps({\n//                 placeholder: 'Rechercher un client',\n//               }),\n//             })}\n//             <div {...getMenuProps()}>\n//               {isOpen ? (\n//                 <Paper className={classes.paper} square>\n//                   {getSuggestions(inputValue).map((suggestion, index) =>\n//                     renderSuggestion({\n//                       suggestion,\n//                       index,\n//                       itemProps: getItemProps({ item: suggestion.label }),\n//                       highlightedIndex,\n//                       selectedItem,\n//                     }),\n//                   )}\n//                 </Paper>\n//               ) : null}\n//             </div>\n//           </div>\n//         )}\n//       </Downshift>\n//     </div>\n//   );\n// }\n// export default withStyles(styles)(IntegrationDownshift);\nimport React, { Component } from 'react';\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n    this.items = ['David', 'Damien', 'Sara', 'Jane'];\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, this.tems.map(item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, item))));\n  }\n\n}","map":{"version":3,"sources":["/var/www/html/devis_sayse/src/views/test.js"],"names":["React","Component","Test","constructor","props","items","componentDidMount","render","tems","map","item"],"mappingsgBC,SAAhB,QAAiC,OAAjC;AAGA,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAE1CE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,CACX,OADW,EAEX,QAFW,EAGX,MAHW,EAIX,MAJW,CAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG,CAEnB;;AACDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,IAAL,CAAUC,GAAV,CAAeC,IAAD,IAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CAAxB,CADL,CAFF,CADF;AAQD;;AAxByC","sourcesContent":["// import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import deburr from 'lodash/deburr';\n// import Downshift from 'downshift';\n// import { withStyles } from '@material-ui/core/styles';\n// import TextField from '@material-ui/core/TextField';\n// import Paper from '@material-ui/core/Paper';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import Chip from '@material-ui/core/Chip';\n\n// const suggestions = [\n//   { label: 'Afghanistan' },\n//   { label: 'Aland Islands' },\n//   { label: 'Albania' },\n//   { label: 'Algeria' },\n//   { label: 'American Samoa' },\n//   { label: 'Andorra' },\n//   { label: 'Angola' },\n//   { label: 'Anguilla' },\n//   { label: 'Antarctica' },\n//   { label: 'Antigua and Barbuda' },\n//   { label: 'Argentina' },\n//   { label: 'Armenia' },\n//   { label: 'Aruba' },\n//   { label: 'Australia' },\n//   { label: 'Austria' },\n//   { label: 'Azerbaijan' },\n//   { label: 'Bahamas' },\n//   { label: 'Bahrain' },\n//   { label: 'Bangladesh' },\n//   { label: 'Barbados' },\n//   { label: 'Belarus' },\n//   { label: 'Belgium' },\n//   { label: 'Belize' },\n//   { label: 'Benin' },\n//   { label: 'Bermuda' },\n//   { label: 'Bhutan' },\n//   { label: 'Bolivia, Plurinational State of' },\n//   { label: 'Bonaire, Sint Eustatius and Saba' },\n//   { label: 'Bosnia and Herzegovina' },\n//   { label: 'Botswana' },\n//   { label: 'Bouvet Island' },\n//   { label: 'Brazil' },\n//   { label: 'British Indian Ocean Territory' },\n//   { label: 'Brunei Darussalam' },\n// ];\n\n// function renderInput(inputProps) {\n//   const { InputProps, classes, ref, ...other } = inputProps;\n\n//   return (\n//     <TextField\n//       InputProps={{\n//         inputRef: ref,\n//         classes: {\n//           root: classes.inputRoot,\n//           input: classes.inputInput,\n//         },\n//         ...InputProps,\n//       }}\n//       {...other}\n//     />\n//   );\n// }\n\n// function renderSuggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem }) {\n//   const isHighlighted = highlightedIndex === index;\n//   const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n\n//   return (\n//     <MenuItem\n//       {...itemProps}\n//       key={suggestion.label}\n//       selected={isHighlighted}\n//       component=\"div\"\n//       style={{\n//         fontWeight: isSelected ? 500 : 400,\n//       }}\n//     >\n//       {suggestion.label}\n//     </MenuItem>\n//   );\n// }\n\n// function getSuggestions(value) {\n//   const inputValue = deburr(value.trim()).toLowerCase();\n//   const inputLength = inputValue.length;\n//   let count = 0;\n\n//   return inputLength === 0\n//     ? []\n//     : suggestions.filter(suggestion => {\n//         const keep =\n//           count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n//         if (keep) {\n//           count += 1;\n//         }\n\n//         return keep;\n//       });\n// }\n\n// class DownshiftMultiple extends Component {\n//   state = {\n//     inputValue: '',\n//     selectedItem: [],\n//   };\n\n//   // handleKeyDown = event => {\n//   //   const { inputValue, selectedItem } = this.state;\n//   //   if (selectedItem.length && !inputValue.length && event.key === 'Backspace') {\n//   //     this.setState({\n//   //       selectedItem: selectedItem.slice(0, selectedItem.length - 1),\n//   //     });\n//   //   }\n//   // };\n\n//   handleInputChange = event => {\n//     this.setState({ inputValue: event.target.value });\n//   };\n\n//   handleChange = item => {\n//     let { selectedItem } = this.state;\n\n//     if (selectedItem.indexOf(item) === -1) {\n//       selectedItem = [...selectedItem, item];\n//     }\n\n//     this.setState({\n//       inputValue: '',\n//       selectedItem,\n//     });\n//   };\n\n//   // handleDelete = item => () => {\n//   //   this.setState(state => {\n//   //     const selectedItem = [...state.selectedItem];\n//   //     selectedItem.splice(selectedItem.indexOf(item), 1);\n//   //     return { selectedItem };\n//   //   });\n//   // };\n\n//   render() {\n//     const { classes } = this.props;\n//     const { inputValue, selectedItem } = this.state;\n\n//     return (\n//       <Downshift\n//         id=\"downshift-multiple\"\n//         inputValue={inputValue}\n//         onChange={this.handleChange}\n//         selectedItem={selectedItem}\n//       >\n//         {({\n//           getInputProps,\n//           getItemProps,\n//           isOpen,\n//           inputValue: inputValue2,\n//           selectedItem: selectedItem2,\n//           highlightedIndex,\n//         }) => (\n//           <div className={classes.container}>\n//             {renderInput({\n//               fullWidth: true,\n//               classes,\n//               InputProps: getInputProps({\n//                 startAdornment: selectedItem.map(item => (\n//                   <Chip\n//                     key={item}\n//                     tabIndex={-1}\n//                     label={item}\n//                     className={classes.chip}\n//                     onDelete={this.handleDelete(item)}\n//                   />\n//                 )),\n//                 onChange: this.handleInputChange,\n//                 onKeyDown: this.handleKeyDown,\n//                 placeholder: 'Select multiple countries',\n//               }),\n//               label: 'Label',\n//             })}\n//             {isOpen ? (\n//               <Paper className={classes.paper} square>\n//                 {getSuggestions(inputValue2).map((suggestion, index) =>\n//                   renderSuggestion({\n//                     suggestion,\n//                     index,\n//                     itemProps: getItemProps({ item: suggestion.label }),\n//                     highlightedIndex,\n//                     selectedItem: selectedItem2,\n//                   }),\n//                 )}\n//               </Paper>\n//             ) : null}\n//           </div>\n//         )}\n//       </Downshift>\n//     );\n//   }\n// }\n\n// DownshiftMultiple.propTypes = {\n//   classes: PropTypes.object.isRequired,\n// };\n\n// const styles = theme => ({\n//   root: {\n//     flexGrow: 1,\n//     height: 250,\n//   },\n//   container: {\n//     flexGrow: 1,\n//     position: 'relative',\n//   },\n//   paper: {\n//     position: 'absolute',\n//     zIndex: 1,\n//     marginTop: theme.spacing.unit,\n//     left: 0,\n//     right: 0,\n//   },\n//   chip: {\n//     margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n//   },\n//   inputRoot: {\n//     flexWrap: 'wrap',\n//   },\n//   inputInput: {\n//     width: 'auto',\n//     flexGrow: 1,\n//   },\n//   divider: {\n//     height: theme.spacing.unit * 2,\n//   },\n// });\n\n// function IntegrationDownshift(props) {\n//   const { classes } = props;\n\n//   return (\n//     <div className={classes.root}>\n//       <Downshift id=\"downshift-simple\">\n//         {({\n//           getInputProps,\n//           getItemProps,\n//           getMenuProps,\n//           highlightedIndex,\n//           inputValue,\n//           isOpen,\n//           selectedItem,\n//         }) => (\n//           <div className={classes.container}>\n//             {renderInput({\n//               fullWidth: true,\n//               classes,\n//               InputProps: getInputProps({\n//                 placeholder: 'Rechercher un client',\n//               }),\n//             })}\n//             <div {...getMenuProps()}>\n//               {isOpen ? (\n//                 <Paper className={classes.paper} square>\n//                   {getSuggestions(inputValue).map((suggestion, index) =>\n//                     renderSuggestion({\n//                       suggestion,\n//                       index,\n//                       itemProps: getItemProps({ item: suggestion.label }),\n//                       highlightedIndex,\n//                       selectedItem,\n//                     }),\n//                   )}\n//                 </Paper>\n//               ) : null}\n//             </div>\n//           </div>\n//         )}\n//       </Downshift>\n\n//     </div>\n//   );\n// }\n\n// export default withStyles(styles)(IntegrationDownshift);\n\n\n\nimport React, { Component } from 'react';\n\n\nexport default class Test extends Component {\n\n  constructor(props){\n    super(props);\n    this.items = [\n      'David',\n      'Damien',\n      'Sara',\n      'Jane',\n    ];\n  }\n\n  componentDidMount() {\n\n  }\n  render(){\n    return(\n      <div>\n        <input type=\"text\" />\n        <ul>\n            {this.tems.map((item) => <li>{item}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}