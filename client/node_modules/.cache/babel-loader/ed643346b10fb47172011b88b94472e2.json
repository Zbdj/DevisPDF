{"ast":null,"code":"var _jsxFileName = \"/var/www/html/devis_sayse/src/views/test.js\";\nimport React, { Component } from 'react';\nimport Autocomplete from 'react-autocomplete';\n\nclass Test extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: 40,\n        marginLeft: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      value: this.state.value,\n      inputProps: {\n        id: 'states-autocomplete'\n      },\n      wrapperStyle: {\n        position: 'relative',\n        display: 'inline-block'\n      } // items={ getStocks() }\n      ,\n      getItemValue: item => item.name // shouldItemRender={ matchStocks }\n      ,\n      onChange: (event, value) => this.setState({\n        value\n      }),\n      onSelect: value => this.setState({\n        value\n      }),\n      renderMenu: children => React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, children),\n      renderItem: (item, isHighlighted) => React.createElement(\"div\", {\n        className: \"item \".concat(isHighlighted ? 'item-highlighted' : ''),\n        key: item.abbr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, item.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["/var/www/html/devis_sayse/src/views/test.js"],"names":["React","Component","Autocomplete","Test","state","value","render","marginTop","marginLeft","id","position","display","item","name","event","setState","children","isHighlighted","abbr"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAA0B,oBAA1B;;AACA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAE3BG,KAF2B,GAEnB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFmB;AAAA;;AAI3BC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,KAAK,EAAI;AAAEC,QAAAA,SAAS,EAAE,EAAb;AAAiBC,QAAAA,UAAU,EAAE;AAA7B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAG,KAAKJ,KAAL,CAAWC,KADrB;AAEE,MAAA,UAAU,EAAE;AAAEI,QAAAA,EAAE,EAAE;AAAN,OAFd;AAGE,MAAA,YAAY,EAAE;AAAEC,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,OAAO,EAAE;AAAjC,OAHhB,CAIE;AAJF;AAKE,MAAA,YAAY,EAAGC,IAAI,IAAIA,IAAI,CAACC,IAL9B,CAME;AANF;AAOE,MAAA,QAAQ,EAAE,CAACC,KAAD,EAAQT,KAAR,KAAkB,KAAKU,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd,CAP9B;AAQE,MAAA,QAAQ,EAAGA,KAAK,IAAI,KAAKU,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd,CARtB;AASE,MAAA,UAAU,EAAGW,QAAQ,IACnB;AAAK,QAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIA,QADJ,CAVJ;AAcE,MAAA,UAAU,EAAG,CAACJ,IAAD,EAAOK,aAAP,KACX;AACE,QAAA,SAAS,iBAAUA,aAAa,GAAG,kBAAH,GAAwB,EAA/C,CADX;AAEE,QAAA,GAAG,EAAGL,IAAI,CAACM,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGIN,IAAI,CAACC,IAHT,CAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AA0BC;;AA/BwB;;AAkC7B,eAAeV,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport Autocomplete from  'react-autocomplete';\nclass Test extends Component {\n\n  state = { value: '' };\n\n  render() {\n    return (\n      <div style = {{ marginTop: 40, marginLeft: 50 }}>\n        <Autocomplete\n          value={ this.state.value }\n          inputProps={{ id: 'states-autocomplete' }}\n          wrapperStyle={{ position: 'relative', display: 'inline-block' }}\n          // items={ getStocks() }\n          getItemValue={ item => item.name }\n          // shouldItemRender={ matchStocks }\n          onChange={(event, value) => this.setState({ value }) }\n          onSelect={ value => this.setState({ value }) }\n          renderMenu={ children => (\n            <div className = \"menu\">\n              { children }\n            </div>\n          )}\n          renderItem={ (item, isHighlighted) => (\n            <div\n              className={`item ${isHighlighted ? 'item-highlighted' : ''}`}\n              key={ item.abbr } >\n              { item.name }\n            </div>\n          )}\n        />\n      </div>\n      );\n    }\n  }\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}