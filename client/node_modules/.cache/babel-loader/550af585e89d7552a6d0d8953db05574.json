{"ast":null,"code":"var _jsxFileName = \"/var/www/html/devis_sayse/src/views/test.js\";\nimport React, { Component } from 'react';\nimport { Form, Icon, Button } from 'antd';\nimport obj from '../assets/data.json';\nimport Service from '../components/Devis/inputService';\nlet id = 0;\n\nclass DynamicFieldSet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.remove = k => {\n      const form = this.props.form; // can use data-binding to get\n\n      const keys = form.getFieldValue('keys'); // We need at least one passenger\n\n      if (keys.length === 1) {\n        return;\n      } // can use data-binding to set\n\n\n      form.setFieldsValue({\n        keys: keys.filter(key => key !== k)\n      });\n    };\n\n    this.add = () => {\n      const form = this.props.form; // can use data-binding to get\n\n      const keys = form.getFieldValue('keys');\n      const nextKeys = keys.concat(id++); // can use data-binding to set\n      // important! notify form to detect changes\n\n      form.setFieldsValue({\n        keys: nextKeys\n      });\n    };\n\n    this.state = {\n      data_service: [],\n      list_service: undefined,\n      text_service: \"\",\n      price_abo: '',\n      marge: '',\n      scroll_service: {\n        overflowY: 'scroll'\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data_service: obj\n    }, () => {});\n  }\n\n  // handleSubmit = e => {\n  //   e.preventDefault();\n  //   this.props.form.validateFields((err, values) => {\n  //     if (!err) {\n  //       const { keys, names } = values;\n  //       console.log('Received values of form: ', values);\n  //       console.log('Merged values:', keys.map(key => names[key]));\n  //     }\n  //   });\n  // };\n  //----------------------------------------------------------------------------------------------------------------------------------------------------------\n  searchDataService(e) {\n    //indexOf(e.target.value) !== -1\n    var queryData = [];\n\n    if (e.target.value !== '') {\n      this.setState({\n        scroll_service: {\n          overflowY: 'scroll',\n          height: '250px',\n          width: '265px'\n        }\n      }); // this.state.data.forEach(function (person) {\n\n      for (let i = 0; i < this.state.data_service.length; i++) {\n        if (this.state.data_service[i].Designation_solution !== null) {\n          if (this.state.data_service[i].Designation_solution.trim().toLowerCase().match(e.target.value)) {\n            // if (this.state.data[i].Designation_solution.trim().toLowerCase().indexOf(e.target.value) !== -1) {\n            // if (queryData.length < 15) {\n            queryData.push(this.state.data_service[i]); // }\n            // }\n          }\n        }\n      }\n    } else {\n      this.setState({\n        scroll_service: {\n          overflowY: 'scroll'\n        }\n      });\n    }\n\n    this.setState({\n      list_service: queryData\n    });\n    this.setState({\n      text_service: e.target.value\n    });\n  }\n\n  selectService(value, e) {\n    this.setState({\n      text_service: value.Designation_solution,\n      price_abo: value.Abo_mois_ht,\n      marge: value.FAS_HT,\n      list_service: [],\n      scroll_service: {\n        overflowY: 'scroll'\n      }\n    });\n    return null;\n  }\n\n  searchPrice(e) {\n    this.setState({\n      price_abo: e.target.value\n    });\n  } //----------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  render() {\n    const _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 4\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 20\n        }\n      }\n    };\n    const formItemLayoutWithOutLabel = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 20,\n          offset: 4\n        }\n      }\n    };\n    getFieldDecorator('keys', {\n      initialValue: []\n    });\n    const keys = getFieldValue('keys');\n    const formItems = keys.map((k, index) => React.createElement(\"div\", {\n      key: k,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Form.Item, Object.assign({\n      className: \"row\",\n      style: {\n        marginTop: '1%'\n      }\n    }, index === 0 ? formItemLayout : formItemLayoutWithOutLabel, {\n      label: index === 0 ? 'Services/Solutions ' : '',\n      required: false,\n      key: k,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), getFieldDecorator(\"names[\".concat(k, \"]\"), {\n      validateTrigger: ['onChange', 'onBlur'],\n      rules: [{\n        required: true,\n        whitespace: true,\n        message: \"err\"\n      }]\n    })(React.createElement(Service, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), keys.length > 1 ? React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"p delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Supprimer \\xA0\\xA0\", React.createElement(Icon, {\n      className: \"dynamic-delete-button\",\n      type: \"minus-circle-o\",\n      onClick: () => this.remove(k),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }))) : null)));\n    return (// <Form onSubmit={this.handleSubmit}>\n      //   {formItems}\n      //   <Form.Item {...formItemLayoutWithOutLabel}>\n      // <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\n      //   <Icon type=\"plus\"/> \n      //   Ajouter un service\n      // </Button>\n      //   </Form.Item>\n      //   <Form.Item {...formItemLayoutWithOutLabel}>\n      //     <Button type=\"primary\" htmlType=\"submit\" >\n      //       Ajouter\n      //     </Button>\n      //   </Form.Item>\n      // </Form>\n      React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, formItems), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"dashed\",\n        className: \"btn_add\",\n        onClick: this.add,\n        style: {\n          width: '50%',\n          marginLeft: '10%',\n          marginBottom: '5vh',\n          marginTop: '1vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), \"Ajouter un service\")))\n    );\n  }\n\n}\n\nconst WrappedDynamicFieldSet = Form.create({\n  name: 'dynamic_form_item'\n})(DynamicFieldSet);\nexport default WrappedDynamicFieldSet; // ReactDOM.render(<WrappedDynamicFieldSet />, mountNode);","map":{"version":3,"sources":["/var/www/html/devis_sayse/src/views/test.js"],"names":["React","Component","Form","Icon","Button","obj","Service","id","DynamicFieldSet","constructor","props","remove","k","form","keys","getFieldValue","length","setFieldsValue","filter","key","add","nextKeys","concat","state","data_service","list_service","undefined","text_service","price_abo","marge","scroll_service","overflowY","componentDidMount","setState","searchDataService","e","queryData","target","value","height","width","i","Designation_solution","trim","toLowerCase","match","push","selectService","Abo_mois_ht","FAS_HT","searchPrice","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","initialValue","formItems","map","index","marginTop","validateTrigger","rules","required","whitespace","message","marginLeft","marginBottom","WrappedDynamicFieldSet","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Icon, Button } from 'antd';\nimport obj from '../assets/data.json'\nimport Service from '../components/Devis/inputService'\nlet id = 0;\n\nclass DynamicFieldSet extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data_service: [],\n      list_service: undefined,\n      text_service: \"\",\n      price_abo: '',\n      marge: '',\n      scroll_service: { overflowY: 'scroll' }\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ data_service: obj }, () => {\n\n    })\n\n  }\n\n  remove = k => {\n    const { form } = this.props;\n    // can use data-binding to get\n    const keys = form.getFieldValue('keys');\n    // We need at least one passenger\n    if (keys.length === 1) {\n      return;\n    }\n\n    // can use data-binding to set\n    form.setFieldsValue({\n      keys: keys.filter(key => key !== k),\n    });\n  };\n\n  add = () => {\n    const { form } = this.props;\n    // can use data-binding to get\n    const keys = form.getFieldValue('keys');\n    const nextKeys = keys.concat(id++);\n    // can use data-binding to set\n    // important! notify form to detect changes\n    form.setFieldsValue({\n      keys: nextKeys,\n    });\n  };\n\n  // handleSubmit = e => {\n  //   e.preventDefault();\n  //   this.props.form.validateFields((err, values) => {\n  //     if (!err) {\n  //       const { keys, names } = values;\n  //       console.log('Received values of form: ', values);\n  //       console.log('Merged values:', keys.map(key => names[key]));\n  //     }\n  //   });\n  // };\n\n  //----------------------------------------------------------------------------------------------------------------------------------------------------------\n  searchDataService(e) {\n    //indexOf(e.target.value) !== -1\n    var queryData = [];\n\n\n    if (e.target.value !== '') {\n      this.setState({ scroll_service: { overflowY: 'scroll', height: '250px', width: '265px' } })\n\n      // this.state.data.forEach(function (person) {\n      for (let i = 0; i < this.state.data_service.length; i++) {\n\n        if (this.state.data_service[i].Designation_solution !== null) {\n          if (this.state.data_service[i].Designation_solution.trim().toLowerCase().match(e.target.value)) {\n\n            // if (this.state.data[i].Designation_solution.trim().toLowerCase().indexOf(e.target.value) !== -1) {\n            // if (queryData.length < 15) {\n            queryData.push(this.state.data_service[i]);\n\n            // }\n            // }\n          }\n\n        }\n      }\n\n    }\n    else {\n      this.setState({ scroll_service: { overflowY: 'scroll' } })\n    }\n\n    this.setState({\n      list_service: queryData\n    });\n    this.setState({\n      text_service: e.target.value\n    })\n\n\n  }\n\n  selectService(value, e) {\n\n    this.setState({\n      text_service: value.Designation_solution,\n      price_abo: value.Abo_mois_ht,\n      marge: value.FAS_HT,\n      list_service: [],\n      scroll_service: { overflowY: 'scroll' }\n    })\n\n    return (\n      null\n    );\n  }\n\n\n  searchPrice(e) {\n    this.setState({\n      price_abo: e.target.value\n    })\n  }\n  //----------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  render() {\n\n\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 20 },\n      },\n    };\n    const formItemLayoutWithOutLabel = {\n      wrapperCol: {\n        xs: { span: 24, offset: 0 },\n        sm: { span: 20, offset: 4 },\n      },\n    };\n    getFieldDecorator('keys', { initialValue: [] });\n    const keys = getFieldValue('keys');\n    const formItems = keys.map((k, index) => (\n      <div key={k}>\n        <Form.Item className=\"row\" style={{ marginTop:'1%'}}\n          {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n          label={index === 0 ? 'Services/Solutions ' : ''}\n          required={false}\n          key={k}\n        >\n          {getFieldDecorator(`names[${k}]`, {\n            validateTrigger: ['onChange', 'onBlur'],\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: \"err\",\n              },\n            ],\n          })\n            (\n            <Service/>\n            )}\n          {keys.length > 1 ? (\n            <div className=\"text-center\">\n              <p className=\"p delete\">Supprimer &nbsp;&nbsp;\n              <Icon\n                  className=\"dynamic-delete-button\"\n                  type=\"minus-circle-o\"\n                  onClick={() => this.remove(k)}\n                />\n              </p>\n            </div>\n          ) : null}\n        </Form.Item>\n      </div>\n    ));\n    return (\n      // <Form onSubmit={this.handleSubmit}>\n      //   {formItems}\n      //   <Form.Item {...formItemLayoutWithOutLabel}>\n      // <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\n      //   <Icon type=\"plus\"/> \n      //   Ajouter un service\n      // </Button>\n      //   </Form.Item>\n      //   <Form.Item {...formItemLayoutWithOutLabel}>\n      //     <Button type=\"primary\" htmlType=\"submit\" >\n      //       Ajouter\n      //     </Button>\n      //   </Form.Item>\n      // </Form>\n      <div className=\"container\">\n        <div className=\"\">{formItems}</div>\n        <div className=\"text-center\">\n          <Button type=\"dashed\" className=\"btn_add\" onClick={this.add} style={{ width: '50%', marginLeft: '10%', marginBottom: '5vh', marginTop: '1vh' }}>\n            <Icon type=\"plus\" />\n           Ajouter un service\n        </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst WrappedDynamicFieldSet = Form.create({ name: 'dynamic_form_item' })(DynamicFieldSet);\nexport default WrappedDynamicFieldSet;\n// ReactDOM.render(<WrappedDynamicFieldSet />, mountNode);"]},"metadata":{},"sourceType":"module"}