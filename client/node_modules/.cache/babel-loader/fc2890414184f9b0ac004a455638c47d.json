{"ast":null,"code":"var _jsxFileName = \"/var/www/html/devis_sayse/src/views/test.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, Icon } from 'antd';\nimport Service from '../components/Devis/inputService';\nlet id = 0;\n\nclass DynamicFieldSet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.remove = k => {\n      const form = this.props.form; // can use data-binding to get\n\n      const keys = form.getFieldValue('keys'); // We need at least one passenger\n\n      if (keys.length === 1) {\n        return;\n      } // can use data-binding to set\n\n\n      form.setFieldsValue({\n        keys: keys.filter(key => key !== k)\n      });\n      console.log(this.state.service); // console.log(keys);\n    };\n\n    this.add = () => {\n      const form = this.props.form; // can use data-binding to get\n\n      const keys = form.getFieldValue('keys');\n      const nextKeys = keys.concat(id++); // can use data-binding to set\n      // important! notify form to detect changes\n\n      form.setFieldsValue({\n        keys: nextKeys\n      });\n    };\n\n    this.state = {\n      data_service: [],\n      list_service: undefined,\n      text_service: \"\",\n      price_abo: '',\n      marge: '',\n      scroll_service: {\n        overflowY: 'scroll'\n      },\n      service: []\n    };\n  }\n\n  componentDidMount() {// this.setState({ data_service: obj }, () => {\n    // })\n  }\n\n  // handleSubmit = e => {\n  //   e.preventDefault();\n  //   this.props.form.validateFields((err, values) => {\n  //     if (!err) {\n  //       const { keys, names } = values;\n  //       console.log('Received values of form: ', values);\n  //       console.log('Merged values:', keys.map(key => names[key]));\n  //     }\n  //   });\n  // };\n  //----------------------------------------------------------------------------------------------------------------------------------------------------------\n  // searchDataService(e) {\n  //   //indexOf(e.target.value) !== -1\n  //   var queryData = [];\n  //   if (e.target.value !== '') {\n  //     this.setState({ scroll_service: { overflowY: 'scroll', height: '250px', width: '265px' } })\n  //     // this.state.data.forEach(function (person) {\n  //     for (let i = 0; i < this.state.data_service.length; i++) {\n  //       if (this.state.data_service[i].Designation_solution !== null) {\n  //         if (this.state.data_service[i].Designation_solution.trim().toLowerCase().match(e.target.value)) {\n  //           // if (this.state.data[i].Designation_solution.trim().toLowerCase().indexOf(e.target.value) !== -1) {\n  //           // if (queryData.length < 15) {\n  //           queryData.push(this.state.data_service[i]);\n  //           // }\n  //           // }\n  //         }\n  //       }\n  //     }\n  //   }\n  //   else {\n  //     this.setState({ scroll_service: { overflowY: 'scroll' } })\n  //   }\n  //   this.setState({\n  //     list_service: queryData\n  //   });\n  //   this.setState({\n  //     text_service: e.target.value\n  //   })\n  // }\n  // selectService(value, e) {\n  //   this.setState({\n  //     text_service: value.Designation_solution,\n  //     price_abo: value.Abo_mois_ht,\n  //     marge: value.FAS_HT,\n  //     list_service: [],\n  //     scroll_service: { overflowY: 'scroll' }\n  //   },() => {\n  //     this.props.getService(value)\n  //   }\n  //   )\n  //   return (\n  //     null\n  //   );\n  // }\n  // searchPrice(e) {\n  //   this.setState({\n  //     price_abo: e.target.value\n  //   })\n  // }\n  //----------------------------------------------------------------------------------------------------------------------------------------------------------\n  getService(e) {\n    this.setState({\n      service: [...this.state.service, e]\n    }, () => {\n      this.props.getService(e);\n    });\n  }\n\n  render() {\n    // console.log(this.state.service);\n    const _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue; // const formItemLayout = {\n    //   labelCol: {\n    //     xs: { span: 24 },\n    //     sm: { span: 4 },\n    //   },\n    //   wrapperCol: {\n    //     xs: { span: 24 },\n    //     sm: { span: 20 },\n    //   },\n    // };\n    // const formItemLayoutWithOutLabel = {\n    //   wrapperCol: {\n    //     xs: { span: 24, offset: 0 },\n    //     sm: { span: 20, offset: 4 },\n    //   },\n    // };\n\n    getFieldDecorator('keys', {\n      initialValue: []\n    });\n    const keys = getFieldValue('keys');\n    const formItems = keys.map((k, index) => React.createElement(\"div\", {\n      key: k,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      className: \"row\",\n      style: {\n        marginTop: '1%'\n      } // {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n      // label={index === 0 ? '' : ''}\n      ,\n      required: false,\n      key: k,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, getFieldDecorator(\"names[\".concat(k, \"]\"), {\n      validateTrigger: ['onChange', 'onBlur'],\n      rules: [{\n        required: true,\n        whitespace: true,\n        message: \"Veuillez remplir tout les champs\"\n      }]\n    })(React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Service n\\xB0 \", k + 1)), React.createElement(Service, {\n      key: k,\n      getSer: this.getService.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }))))));\n    return (// <Form onSubmit={this.handleSubmit}>\n      //   {formItems}\n      //   <Form.Item {...formItemLayoutWithOutLabel}>\n      // <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\n      //   <Icon type=\"plus\"/> \n      //   Ajouter un service\n      // </Button>\n      //   </Form.Item>\n      //   <Form.Item {...formItemLayoutWithOutLabel}>\n      //     <Button type=\"primary\" htmlType=\"submit\" >\n      //       Ajouter\n      //     </Button>\n      //   </Form.Item>\n      // </Form>\n      React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, formItems), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12 text-center\",\n        style: {\n          marginTop: '2vh',\n          marginBottom: '2vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"\",\n        className: \"btn_add\",\n        onClick: this.add,\n        style: {\n          width: \"6%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus-circle\",\n        style: {\n          fontSize: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      })))))\n    );\n  }\n\n}\n\nconst WrappedDynamicFieldSet = Form.create({\n  name: 'dynamic_form_item'\n})(DynamicFieldSet);\nexport default WrappedDynamicFieldSet; // ReactDOM.render(<WrappedDynamicFieldSet />, mountNode);","map":{"version":3,"sources":["/var/www/html/devis_sayse/src/views/test.js"],"names":["React","Component","Form","Button","Icon","Service","id","DynamicFieldSet","constructor","props","remove","k","form","keys","getFieldValue","length","setFieldsValue","filter","key","console","log","state","service","add","nextKeys","concat","data_service","list_service","undefined","text_service","price_abo","marge","scroll_service","overflowY","componentDidMount","getService","e","setState","render","getFieldDecorator","initialValue","formItems","map","index","marginTop","validateTrigger","rules","required","whitespace","message","bind","marginBottom","width","fontSize","WrappedDynamicFieldSet","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button,Icon } from 'antd';\nimport Service from '../components/Devis/inputService'\nlet id = 0;\n\nclass DynamicFieldSet extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data_service: [],\n      list_service: undefined,\n      text_service: \"\",\n      price_abo: '',\n      marge: '',\n      scroll_service: { overflowY: 'scroll' },\n\n      service: []\n    }\n  }\n\n  componentDidMount() {\n    // this.setState({ data_service: obj }, () => {\n\n    // })\n\n  }\n\n  remove = k => {\n    const { form } = this.props;\n\n    // can use data-binding to get\n    const keys = form.getFieldValue('keys');\n    // We need at least one passenger\n    if (keys.length === 1) {\n      return;\n    }\n\n    // can use data-binding to set\n    form.setFieldsValue({\n      keys: keys.filter(key => key !== k),\n    });\n\n    console.log(this.state.service);\n    // console.log(keys);\n    \n    \n  };\n\n  add = () => {\n    const { form } = this.props;\n    // can use data-binding to get\n    const keys = form.getFieldValue('keys');\n    const nextKeys = keys.concat(id++);\n    // can use data-binding to set\n    // important! notify form to detect changes\n    form.setFieldsValue({\n      keys: nextKeys,\n    });\n  };\n\n  // handleSubmit = e => {\n  //   e.preventDefault();\n  //   this.props.form.validateFields((err, values) => {\n  //     if (!err) {\n  //       const { keys, names } = values;\n  //       console.log('Received values of form: ', values);\n  //       console.log('Merged values:', keys.map(key => names[key]));\n  //     }\n  //   });\n  // };\n\n  //----------------------------------------------------------------------------------------------------------------------------------------------------------\n  // searchDataService(e) {\n  //   //indexOf(e.target.value) !== -1\n  //   var queryData = [];\n\n\n  //   if (e.target.value !== '') {\n  //     this.setState({ scroll_service: { overflowY: 'scroll', height: '250px', width: '265px' } })\n\n  //     // this.state.data.forEach(function (person) {\n  //     for (let i = 0; i < this.state.data_service.length; i++) {\n\n  //       if (this.state.data_service[i].Designation_solution !== null) {\n  //         if (this.state.data_service[i].Designation_solution.trim().toLowerCase().match(e.target.value)) {\n\n  //           // if (this.state.data[i].Designation_solution.trim().toLowerCase().indexOf(e.target.value) !== -1) {\n  //           // if (queryData.length < 15) {\n  //           queryData.push(this.state.data_service[i]);\n\n  //           // }\n  //           // }\n  //         }\n\n  //       }\n  //     }\n\n  //   }\n  //   else {\n  //     this.setState({ scroll_service: { overflowY: 'scroll' } })\n  //   }\n\n  //   this.setState({\n  //     list_service: queryData\n  //   });\n  //   this.setState({\n  //     text_service: e.target.value\n  //   })\n\n\n  // }\n\n  // selectService(value, e) {\n\n  //   this.setState({\n  //     text_service: value.Designation_solution,\n  //     price_abo: value.Abo_mois_ht,\n  //     marge: value.FAS_HT,\n  //     list_service: [],\n  //     scroll_service: { overflowY: 'scroll' }\n  //   },() => {\n  //     this.props.getService(value)\n  //   }\n  //   )\n\n  //   return (\n  //     null\n  //   );\n  // }\n\n\n  // searchPrice(e) {\n  //   this.setState({\n  //     price_abo: e.target.value\n  //   })\n  // }\n  //----------------------------------------------------------------------------------------------------------------------------------------------------------\n  getService(e) {\n    \n        this.setState({ service: [...this.state.service, e] }\n      , () => {\n        this.props.getService(e)\n    })\n\n  }\n\n  render() {\n\n    // console.log(this.state.service);\n\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    // const formItemLayout = {\n    //   labelCol: {\n    //     xs: { span: 24 },\n    //     sm: { span: 4 },\n    //   },\n    //   wrapperCol: {\n    //     xs: { span: 24 },\n    //     sm: { span: 20 },\n    //   },\n    // };\n    // const formItemLayoutWithOutLabel = {\n    //   wrapperCol: {\n    //     xs: { span: 24, offset: 0 },\n    //     sm: { span: 20, offset: 4 },\n    //   },\n    // };\n\n    getFieldDecorator('keys', { initialValue: [] });\n    const keys = getFieldValue('keys');\n    const formItems = keys.map((k, index) => (\n      <div key={k}>\n        <Form.Item className=\"row\" style={{ marginTop: '1%' }}\n          // {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n          // label={index === 0 ? '' : ''}\n          required={false}\n          key={k}\n        >\n          {getFieldDecorator(`names[${k}]`, {\n            validateTrigger: ['onChange', 'onBlur'],\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: \"Veuillez remplir tout les champs\",\n              },\n            ],\n          })(\n            <div >\n              <hr></hr>\n              <div className=\"text-center\">\n              <label className=\"label\" >Service n° {k + 1}</label>\n              </div>\n              <Service key={k} getSer={this.getService.bind(this)}/>\n              </div>\n            )}\n          {/* {keys.length > 1 ? (\n            <div className=\"text-center\">\n              <p className=\"p delete\">Supprimer le service n° {k + 1} &nbsp;\n              <Icon\n                  className=\"dynamic-delete-button\"\n                  type=\"minus-circle-o\"\n                  onClick={() => this.remove(k)}\n                />\n              </p>\n            </div>\n          ) : null} */}\n        </Form.Item>\n      </div>\n\n    ));\n\n    return (\n      // <Form onSubmit={this.handleSubmit}>\n      //   {formItems}\n      //   <Form.Item {...formItemLayoutWithOutLabel}>\n      // <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\n      //   <Icon type=\"plus\"/> \n      //   Ajouter un service\n      // </Button>\n      //   </Form.Item>\n      //   <Form.Item {...formItemLayoutWithOutLabel}>\n      //     <Button type=\"primary\" htmlType=\"submit\" >\n      //       Ajouter\n      //     </Button>\n      //   </Form.Item>\n      // </Form>\n      <div className=\"container\">\n        <div className=\"\">\n            {formItems}\n            {/* <button onClick={this.getKey.bind(this)}>getKey</button> */}\n        </div>\n        <hr></hr>\n        <div className=\"row\">\n        <div className=\"col-12 text-center\" style={{ marginTop: '2vh',  marginBottom: '2vh'}}>\n          <Button type=\"\" className=\"btn_add\" onClick={this.add} style={{  width:\"6%\" }}>\n            {/* <Icon type=\"plus\" /> */}\n            <Icon type=\"plus-circle\" style={{ fontSize:'20px' }} />\n        </Button>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst WrappedDynamicFieldSet = Form.create({ name: 'dynamic_form_item' })(DynamicFieldSet);\nexport default WrappedDynamicFieldSet;\n// ReactDOM.render(<WrappedDynamicFieldSet />, mountNode);"]},"metadata":{},"sourceType":"module"}