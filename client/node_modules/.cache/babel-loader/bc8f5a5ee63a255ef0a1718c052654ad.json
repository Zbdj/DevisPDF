{"ast":null,"code":"var _jsxFileName = \"/var/www/html/devis_sayse/src/views/test_input.js\";\nimport React, { Component } from 'react';\nimport Client from '../components/Devis/inputClient';\nimport Service from './test.js';\nimport { Input } from 'antd';\nimport ReactGoogleMapLoader from \"react-google-maps-loader\";\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\";\nconst API_KEY = \"AIzaSyAQU3x2PDxhLZEYFk4Af4HBPYDpy40aHEs\";\nexport default class Test extends Component {\n  constructor() {\n    super();\n    this.state = {\n      client: [],\n      service: [],\n      result: [],\n      key: []\n    };\n  }\n\n  componentDidMount() {// console.log(this.state.service);\n    // console.log(this.state.client);\n  }\n\n  handleSubmit(e) {\n    // alert('Client : ' + this.state.client.name + ' Adresse : ' + this.state.client.adresse + ' Service : ' + this.state.service.Designation_solution);\n    // console.log(this.state.client)\n    // console.log(this.state.service)\n    console.log(this.state.service);\n    console.log(this.state.client);\n    e.preventDefault();\n  }\n\n  handleInputChange(e) {\n    console.log(e.target.value);\n  }\n\n  getData(e) {\n    // this.setState({client: e})\n    this.setState({\n      client: [...this.state.client, e]\n    }); // console.log(e);\n  }\n\n  getService(e) {\n    this.setState({\n      service: [...this.state.service, e]\n    }); // console.log(this.state.service);\n  }\n\n  adresseChange() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Client, {\n      getData: this.getData.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Service, {\n      getService: this.getService.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center p text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"IMPORTANT !\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Adresse Livraison:\", React.createElement(ReactGoogleMapLoader, {\n      params: {\n        key: API_KEY,\n        libraries: \"places,geocode\"\n      },\n      render: googleMaps => googleMaps && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(ReactGooglePlacesSuggest, {\n        autocompletionRequest: {\n          input: search\n        },\n        googleMaps: googleMaps,\n        onSelectSuggest: this.handleSelectSuggest.bind(this),\n        textNoResults: \"Aucune adresse trouv√©e..\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Adresse de d\\xE9part\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"text\",\n        value: value,\n        placeholder: \"D\\xE9part\",\n        onChange: this.adresseChange.bind(this),\n        style: {\n          width: '30vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn-info\",\n      style: {\n        borderRadius: '5%',\n        width: '15vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/var/www/html/devis_sayse/src/views/test_input.js"],"names":["React","Component","Client","Service","Input","ReactGoogleMapLoader","ReactGooglePlacesSuggest","API_KEY","Test","constructor","state","client","service","result","key","componentDidMount","handleSubmit","e","console","log","preventDefault","handleInputChange","target","value","getData","setState","getService","adresseChange","render","bind","libraries","googleMaps","input","search","handleSelectSuggest","width","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Client from '../components/Devis/inputClient';\nimport Service from './test.js';\nimport { Input } from 'antd';\n\nimport ReactGoogleMapLoader from \"react-google-maps-loader\"\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\"\n\nconst API_KEY = \"AIzaSyAQU3x2PDxhLZEYFk4Af4HBPYDpy40aHEs\"\n\nexport default class Test extends Component {\n    constructor() {\n        super();\n        this.state = {\n            client: [],\n            service: [],\n            result: [],\n            key: [],\n\n        }\n    }\n\n    componentDidMount() {\n        // console.log(this.state.service);\n        // console.log(this.state.client);\n\n    }\n\n    handleSubmit(e) {\n        // alert('Client : ' + this.state.client.name + ' Adresse : ' + this.state.client.adresse + ' Service : ' + this.state.service.Designation_solution);\n        // console.log(this.state.client)\n        // console.log(this.state.service)\n        console.log(this.state.service);\n        console.log(this.state.client);\n\n        e.preventDefault();\n    }\n\n    handleInputChange(e) {\n        console.log(e.target.value);\n    }\n\n    getData(e) {\n        // this.setState({client: e})\n        this.setState({ client: [... this.state.client, e] })\n\n        // console.log(e);\n    }\n    getService(e) {\n        this.setState({ service: [... this.state.service, e] })\n        // console.log(this.state.service);\n    }\n\n    adresseChange() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"body\">\n                <div className=\"content container\">\n                    <form onSubmit={this.handleSubmit.bind(this)}>\n                        <Client getData={this.getData.bind(this)} />\n                        <hr></hr>\n                        <Service getService={this.getService.bind(this)} />\n                        <hr></hr>\n\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <p className=\"text-center p text-danger\">IMPORTANT !</p>\n                                <label>\n                                    Adresse Livraison:\n                                    <ReactGoogleMapLoader\n                                        params={{\n                                            key: API_KEY,\n                                            libraries: \"places,geocode\",\n                                        }}\n                                        render={googleMaps =>\n                                            googleMaps && (\n                                                <div >\n                                                    <ReactGooglePlacesSuggest\n                                                        autocompletionRequest={{ input: search }}\n                                                        googleMaps={googleMaps}\n                                                        onSelectSuggest={this.handleSelectSuggest.bind(this)}\n                                                        textNoResults={\"Aucune adresse trouv√©e..\"}\n                                                    >\n                                                        <h6>Adresse de d√©part</h6><br></br>\n                                                        <Input\n                                                            type=\"text\"\n                                                            value={value}\n                                                            placeholder=\"D√©part\"\n                                                            onChange={this.adresseChange.bind(this)}\n                                                            style={{ width: '30vh' }}\n                                                        />\n                                                        {/* &nbsp;&nbsp;<i class=\"fas fa-times\" onClick={this.delete_1.bind(this)} style={{ color: 'red' }}></i> */}\n                                                    </ReactGooglePlacesSuggest>\n                                                </div>\n                                            )\n\n\n                                        }\n                                    />\n                                </label>\n\n\n\n                            </div>\n                        </div>\n\n                        <hr></hr>\n\n\n\n\n\n\n\n\n                        <div className=\"text-center\">\n                            <input type=\"submit\" value=\"Submit\" className=\"btn-info\" style={{ borderRadius: '5%', width: '15vh' }} />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}