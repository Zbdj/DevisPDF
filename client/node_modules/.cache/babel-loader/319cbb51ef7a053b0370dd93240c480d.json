{"ast":null,"code":"var _jsxFileName = \"/var/www/html/devis_sayse/src/views/test.js\";\nimport React, { Component } from 'react';\nimport SearchInput, { createFilter } from 'react-search-input';\nimport axios from 'axios'; // import emails from './mails'\n\nconst KEYS_TO_FILTERS = ['user.name', 'subject', 'dest.name'];\nexport default class test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: ''\n    };\n    this.searchUpdated = this.searchUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"https://sayse.pipedrive.com/v1/deals?api_token=d168467b213a71acdc4ba5cb5b2cfe96529ac061&limit=500\").then(res => {\n      var data = [];\n      res.data.data.forEach(element => {\n        data.push(element.person_name);\n      }); // console.log([...new Set(data)]);\n\n      data = data.filter((v, i, arr) => arr.indexOf(v) === i);\n      this.setState({\n        items: data\n      });\n      console.log(res.data.data);\n    });\n  }\n\n  render() {\n    const filteredEmails = emails.filter(createFilter(this.state.searchTerm, KEYS_TO_FILTERS));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(SearchInput, {\n      className: \"search-input\",\n      onChange: this.searchUpdated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), filteredEmails.map(email => {\n      return React.createElement(\"div\", {\n        className: \"mail\",\n        key: email.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"from\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, email.user.name), React.createElement(\"div\", {\n        className: \"subject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, email.subject));\n    }));\n  }\n\n  searchUpdated(term) {\n    this.setState({\n      searchTerm: term\n    });\n  }\n\n}","map":{"version":3,"sources":["/var/www/html/devis_sayse/src/views/test.js"],"names":["React","Component","SearchInput","createFilter","axios","KEYS_TO_FILTERS","test","constructor","props","state","searchTerm","searchUpdated","bind","componentDidMount","get","then","res","data","forEach","element","push","person_name","filter","v","i","arr","indexOf","setState","items","console","log","render","filteredEmails","emails","map","email","id","user","name","subject","term"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,IAAqBC,YAArB,QAAwC,oBAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,MAAMC,eAAe,GAAG,CAAC,WAAD,EAAc,SAAd,EAAyB,WAAzB,CAAxB;AAEA,eAAe,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAC1CM,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAElBT,IAAAA,KAAK,CAACU,GAAN,sGACGC,IADH,CACQC,GAAG,IAAI;AACX,UAAIC,IAAI,GAAG,EAAX;AAEAD,MAAAA,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcC,OAAd,CAAsBC,OAAO,IAAI;AAC/BF,QAAAA,IAAI,CAACG,IAAL,CAAUD,OAAO,CAACE,WAAlB;AACD,OAFD,EAHW,CAMX;;AAEAJ,MAAAA,IAAI,GAAGA,IAAI,CAACK,MAAL,CAAY,CAACC,CAAD,EAAIC,CAAJ,EAAOC,GAAP,KAAeA,GAAG,CAACC,OAAJ,CAAYH,CAAZ,MAAmBC,CAA9C,CAAP;AAEA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEX;AAAT,OAAd;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYd,GAAG,CAACC,IAAJ,CAASA,IAArB;AAED,KAdH;AAgBD;;AAEDc,EAAAA,MAAM,GAAI;AACR,UAAMC,cAAc,GAAGC,MAAM,CAACX,MAAP,CAAcnB,YAAY,CAAC,KAAKM,KAAL,CAAWC,UAAZ,EAAwBL,eAAxB,CAA1B,CAAvB;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,cAAvB;AAAsC,MAAA,QAAQ,EAAE,KAAKM,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGqB,cAAc,CAACE,GAAf,CAAmBC,KAAK,IAAI;AAC3B,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBD,KAAK,CAACE,IAAN,CAAWC,IAAlC,CADF,EAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BH,KAAK,CAACI,OAAhC,CAFF,CADF;AAMD,KAPA,CAFH,CADF;AAaD;;AAED5B,EAAAA,aAAa,CAAE6B,IAAF,EAAQ;AACnB,SAAKb,QAAL,CAAc;AAACjB,MAAAA,UAAU,EAAE8B;AAAb,KAAd;AACD;;AAjDyC","sourcesContent":["import React, {Component} from 'react'\nimport SearchInput, {createFilter} from 'react-search-input'\nimport axios from 'axios';\n\n// import emails from './mails'\n \nconst KEYS_TO_FILTERS = ['user.name', 'subject', 'dest.name']\n \nexport default class test extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      searchTerm: ''\n    }\n    this.searchUpdated = this.searchUpdated.bind(this)\n  }\n  \n  componentDidMount() {\n\n    axios.get(`https://sayse.pipedrive.com/v1/deals?api_token=d168467b213a71acdc4ba5cb5b2cfe96529ac061&limit=500`)\n      .then(res => {\n        var data = [];\n\n        res.data.data.forEach(element => {\n          data.push(element.person_name)\n        });\n        // console.log([...new Set(data)]);\n\n        data = data.filter((v, i, arr) => arr.indexOf(v) === i)\n\n        this.setState({ items: data })\n        console.log(res.data.data)\n\n      });\n\n  }\n \n  render () {\n    const filteredEmails = emails.filter(createFilter(this.state.searchTerm, KEYS_TO_FILTERS))\n \n    return (\n      <div>\n        <SearchInput className=\"search-input\" onChange={this.searchUpdated} />\n        {filteredEmails.map(email => {\n          return (\n            <div className=\"mail\" key={email.id}>\n              <div className=\"from\">{email.user.name}</div>\n              <div className=\"subject\">{email.subject}</div>\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n \n  searchUpdated (term) {\n    this.setState({searchTerm: term})\n  }\n}"]},"metadata":{},"sourceType":"module"}