{"ast":null,"code":"var _jsxFileName = \"/var/www/html/devis_sayse/src/views/test_input.js\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport ReactGoogleMapLoader from \"react-google-maps-loader\";\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\";\nconst API_KEY = \"AIzaSyAQU3x2PDxhLZEYFk4Af4HBPYDpy40aHEs\";\n\nclass GoogleSuggest extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      value: \"\",\n      value_2: \"\",\n      search_2: \"\",\n      first_adresse: {},\n      last_adresse: {}\n    };\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      search: e.target.value,\n      value: e.target.value\n    });\n  }\n\n  handleInputChange_1(e) {\n    this.setState({\n      search_2: e.target.value,\n      value_2: e.target.value\n    });\n  }\n\n  handleSelectSuggest(suggest) {\n    // console.log(suggest.geometry.viewport.na.j)\n    // console.log(suggest.geometry.viewport.ia.j)\n    var first_adresse = {\n      first_point: suggest.geometry.viewport.na.j,\n      last_point: suggest.geometry.viewport.ia.j\n    };\n    this.setState({\n      search: \"\",\n      value: suggest.formatted_address,\n      first_adresse: first_adresse\n    });\n  }\n\n  handleSelectSuggest_2(suggest) {\n    console.log(suggest);\n    this.setState({\n      search_2: \"\",\n      value_2: suggest.formatted_address\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          search = _this$state.search,\n          value = _this$state.value,\n          value_2 = _this$state.value_2,\n          search_2 = _this$state.search_2;\n    console.log(this.state.coordonne_1);\n    return React.createElement(ReactGoogleMapLoader, {\n      params: {\n        key: API_KEY,\n        libraries: \"places,geocode\"\n      },\n      render: googleMaps => googleMaps && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(ReactGooglePlacesSuggest, {\n        autocompletionRequest: {\n          input: search\n        },\n        googleMaps: googleMaps,\n        onSelectSuggest: this.handleSelectSuggest.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: value,\n        placeholder: \"Addresse de d\\xE9part\",\n        onChange: this.handleInputChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(ReactGooglePlacesSuggest, {\n        autocompletionRequest: {\n          input: search_2\n        },\n        googleMaps: googleMaps,\n        onSelectSuggest: this.handleSelectSuggest_2.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: value_2,\n        placeholder: \"Adresse d'arriv\\xE9e\",\n        onChange: this.handleInputChange_1.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  }\n\n}\n\nGoogleSuggest.propTypes = {\n  googleMaps: PropTypes.object\n};\nexport default GoogleSuggest;","map":{"version":3,"sources":["/var/www/html/devis_sayse/src/views/test_input.js"],"names":["PropTypes","React","ReactGoogleMapLoader","ReactGooglePlacesSuggest","API_KEY","GoogleSuggest","Component","state","search","value","value_2","search_2","first_adresse","last_adresse","handleInputChange","e","setState","target","handleInputChange_1","handleSelectSuggest","suggest","first_point","geometry","viewport","na","j","last_point","ia","formatted_address","handleSelectSuggest_2","console","log","render","coordonne_1","key","libraries","googleMaps","input","bind","propTypes","object"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport ReactGoogleMapLoader from \"react-google-maps-loader\"\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\"\n\nconst API_KEY = \"AIzaSyAQU3x2PDxhLZEYFk4Af4HBPYDpy40aHEs\"\nclass GoogleSuggest extends React.Component {\n  state = {\n    search: \"\",\n    value: \"\",\n    value_2: \"\",\n    search_2: \"\",\n    first_adresse: {},\n    last_adresse: {},\n\n  }\n\n  handleInputChange(e) {\n    this.setState({search: e.target.value, value: e.target.value})\n  }\n  handleInputChange_1(e) {\n    this.setState({search_2: e.target.value, value_2: e.target.value})\n  }\n\n  handleSelectSuggest(suggest) {\n    // console.log(suggest.geometry.viewport.na.j)\n    // console.log(suggest.geometry.viewport.ia.j)\n    var first_adresse = {\n        first_point:suggest.geometry.viewport.na.j,\n        last_point:suggest.geometry.viewport.ia.j,\n    }\n\n    this.setState({search: \"\", value: suggest.formatted_address, first_adresse: first_adresse })\n  }\n  handleSelectSuggest_2(suggest) {\n    console.log(suggest)\n    this.setState({search_2: \"\", value_2: suggest.formatted_address})\n  }\n\n  render() {\n    const {search, value, value_2, search_2} = this.state\n    console.log(this.state.coordonne_1);\n    \n    return (        \n      <ReactGoogleMapLoader\n        params={{\n          key: API_KEY,\n          libraries: \"places,geocode\",\n        }}\n        render={googleMaps =>\n          googleMaps && (\n            <div>\n              <ReactGooglePlacesSuggest\n                autocompletionRequest={{input: search}}\n                googleMaps={googleMaps}\n                onSelectSuggest={this.handleSelectSuggest.bind(this)}\n              >\n                <input\n                  type=\"text\"\n                  value={value}\n                  placeholder=\"Addresse de départ\"\n                  onChange={this.handleInputChange.bind(this)}\n                />\n              </ReactGooglePlacesSuggest>\n\n              <ReactGooglePlacesSuggest\n                autocompletionRequest={{input: search_2}}\n                googleMaps={googleMaps}\n                onSelectSuggest={this.handleSelectSuggest_2.bind(this)}\n              >\n                <input\n                  type=\"text\"\n                  value={value_2}\n                  placeholder=\"Adresse d'arrivée\"\n                  onChange={this.handleInputChange_1.bind(this)}\n                />\n              </ReactGooglePlacesSuggest>\n            </div>\n          )\n        }\n      />\n    )\n  }\n}\n\nGoogleSuggest.propTypes = {\n  googleMaps: PropTypes.object,\n}\n\nexport default GoogleSuggest"]},"metadata":{},"sourceType":"module"}