{"ast":null,"code":"var _jsxFileName = \"/var/www/html/devis_sayse/src/views/NotFound.js\";\nimport React, { Component } from 'react';\nimport FinalForm from './test_input';\nimport Client from '../components/Devis/inputClient';\nimport { Form, Button, notification, Icon, Input } from 'antd';\nimport { log } from 'util';\nvar type = '';\nvar title = '';\nvar message = '';\nvar duration = null;\nlet id = 0;\nvar prixAbo = 0;\n\nclass NotFound extends Component {\n  constructor() {\n    super();\n\n    this.add = e => {\n      const form = this.props.form; // can use data-binding to get\n\n      const keys = form.getFieldValue('keys');\n      const nextKeys = keys.concat(id++); // can use data-binding to set\n      // important! notify form to detect changes\n\n      form.setFieldsValue({\n        keys: nextKeys\n      });\n      e.preventDefault();\n    };\n\n    this.state = {\n      res: [],\n      client: [],\n      nameSite: '',\n      sub: false,\n      final: [],\n      remise: '',\n      showRemise: false\n    };\n  }\n\n  componentDidMount() {}\n\n  getData(e) {\n    this.setState({\n      client: [...this.state.client, e]\n    });\n  }\n\n  handleSubmit(event) {\n    const getFieldValue = this.props.form.getFieldValue;\n    const keys = getFieldValue('keys');\n\n    if (this.state.sub !== true && this.state.res[keys.length - 1] !== undefined) {\n      this.Final();\n    }\n\n    event.preventDefault();\n  }\n\n  getDataForPdf(e) {\n    // var array = [];\n    // array.push(e)\n    // var obj = {};\n    // //Delete .service\n    // obj.site = e.service;\n    // obj.info = e.info;\n    this.setState({\n      res: [...this.state.res, e]\n    });\n  }\n\n  Final() {\n    var finalData = {};\n    finalData.service = this.state.res;\n    finalData.client = this.state.client;\n    this.setState({\n      sub: true // final : finalData\n\n    }); // console.log(this.props.text);\n\n    this.props.text(finalData); // console.log(this.props.text);\n\n    this.props.history.push('/PDF');\n  }\n\n  remise(e) {\n    this.setState({\n      remise: e.target.value\n    });\n  }\n\n  addRemise() {\n    if (this.state.showRemise === false) {\n      for (let i = 0; i < this.state.res.length; i++) {\n        for (let y = 0; y < this.state.res[i].service.length; y++) {\n          // prixAbo += parseInt(this.state.res[i].service[y][1].Abo_mois_ht.substring(0, this.state.res[i].service[y][1].Abo_mois_ht.length - 2));\n          console.log(Object.keys(this.state.res[i].service[y]).values());\n        }\n      }\n\n      this.setState({\n        showRemise: true\n      });\n    } else {\n      this.setState({\n        showRemise: false\n      });\n    }\n  }\n\n  render() {\n    // console.log(this.state.res);\n    const _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n    const _this$state = this.state,\n          remise = _this$state.remise,\n          showRemise = _this$state.showRemise;\n    console.log(prixAbo);\n    console.log(showRemise); // const formItemLayout = {\n    //     labelCol: {\n    //         xs: { span: 24 },\n    //         sm: { span: 4 },\n    //     },\n    //     wrapperCol: {\n    //         xs: { span: 24 },\n    //         sm: { span: 20 },\n    //     },\n    // };\n    // const formItemLayoutWithOutLabel = {\n    //     wrapperCol: {\n    //         xs: { span: 24, offset: 0 },\n    //         sm: { span: 20, offset: 4 },\n    //     },\n    // };\n\n    getFieldDecorator('keys', {\n      initialValue: []\n    });\n    const keys = getFieldValue('keys');\n    const formItems = keys.map((k, index) => React.createElement(\"div\", {\n      key: k,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      className: \"row\",\n      style: {\n        marginTop: '1%'\n      } // {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n      // label={index === 0 ? '' : ''}\n      ,\n      required: false,\n      key: k,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(FinalForm, {\n      getDataForPdf: this.getDataForPdf.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }))))));\n\n    if (this.state.res[keys.length - 1] !== undefined && this.state.client.length !== 0) {\n      if (this.state.sub === true) {\n        type = \"warning\";\n        title = \"Attention !\";\n        message = \"Votre devis est deja prêt\";\n      } else {\n        type = 'success';\n        title = \"Visualisation de votre devis\";\n        message = \"Si le devis vous convient vous pouvez le télécharger en cliquant sur le bouton en bas de page\";\n        duration = 4;\n      }\n    } else {\n      type = 'info';\n      title = \"Oups ...\";\n      message = \"Vous devez remplir toute les informations sur la page avant de convertir les données en PDF..\";\n    }\n\n    const openNotificationWithIcon = type => {\n      notification[type]({\n        message: title,\n        description: message,\n        duration: duration\n      });\n    };\n\n    return React.createElement(\"div\", {\n      className: \"bgForm p-5\",\n      style: {\n        height: '100vh',\n        padding: \"50vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"blur \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"divForm \",\n      style: {\n        height: '90vh',\n        overflowY: \"scroll\",\n        scrollbarWidth: 'none',\n        borderRadius: \"15px\",\n        boxShadow: '5px 10px 5px rgba(0,0,0,0.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" contenu\",\n      style: {\n        marginTop: \"5%\",\n        zIndex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center\",\n      style: {\n        marginBottom: \"5vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Cr\\xE9ation de devis\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Client, {\n      getData: this.getData.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, formItems), React.createElement(\"div\", {\n      className: \"text-center container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"btn_add\",\n      onClick: this.add,\n      style: {\n        width: '20%',\n        marginBottom: '2vh',\n        marginTop: '2vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus-circle\",\n      className: \"iconPlus\",\n      style: {\n        fontSize: '15px',\n        color: \"#4283C6\",\n        position: \"relative\",\n        bottom: \"2.5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), \"Ajouter un nouveau site\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, this.state.showRemise === true ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Remise en %\",\n      type: \"text\",\n      value: remise,\n      onChange: this.remise.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Prix Abo : \", prixAbo, \" \\u20AC \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Prix total avec remise : \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Annuler la remise \\xA0 \", React.createElement(Icon, {\n      type: \"close\",\n      style: {\n        color: 'red',\n        fontSize: \"20px\"\n      },\n      onClick: this.addRemise.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }))) : React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.addRemise.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Ajouter une remise\"))))), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onClick: () => openNotificationWithIcon(type),\n      className: \"btn btn-light btn_pdf \",\n      type: \"submit\",\n      value: \"Convertir en PDF\",\n      style: {\n        marginTop: '5%',\n        marginBottom: '5%',\n        color: '#4283C6',\n        backgroundColor: 'white',\n        width: '30%',\n        height: \"15%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst WrappedDynamicFieldSet = Form.create({\n  name: 'dynamic_form_item'\n})(NotFound);\nexport default WrappedDynamicFieldSet;","map":{"version":3,"sources":["/var/www/html/devis_sayse/src/views/NotFound.js"],"names":["React","Component","FinalForm","Client","Form","Button","notification","Icon","Input","log","type","title","message","duration","id","prixAbo","NotFound","constructor","add","e","form","props","keys","getFieldValue","nextKeys","concat","setFieldsValue","preventDefault","state","res","client","nameSite","sub","final","remise","showRemise","componentDidMount","getData","setState","handleSubmit","event","length","undefined","Final","getDataForPdf","finalData","service","text","history","push","target","value","addRemise","i","y","console","Object","values","render","getFieldDecorator","initialValue","formItems","map","k","index","marginTop","bind","openNotificationWithIcon","description","height","padding","overflowY","scrollbarWidth","borderRadius","boxShadow","zIndex","marginBottom","width","fontSize","color","position","bottom","backgroundColor","WrappedDynamicFieldSet","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport FinalForm from './test_input';\nimport Client from '../components/Devis/inputClient';\nimport { Form, Button, notification,Icon,Input  } from 'antd';\nimport { log } from 'util';\n\n\nvar type = ''\nvar title = ''\nvar message = ''\nvar duration = null\nlet id = 0;\nvar prixAbo = 0;\nclass NotFound extends Component {\n    constructor() {\n        super();\n        this.state = {\n            res: [],\n            client: [],\n            nameSite: '',\n            sub: false,\n            final: [],\n            remise: '',\n            showRemise: false,\n        }\n    }\n\n    componentDidMount() {\n\n        \n    }\n\n    add = (e) => {\n        const { form } = this.props;\n        // can use data-binding to get\n        const keys = form.getFieldValue('keys');\n        const nextKeys = keys.concat(id++);\n        // can use data-binding to set\n        // important! notify form to detect changes\n        form.setFieldsValue({\n            keys: nextKeys,\n        });\n\n        e.preventDefault();\n    };\n\n\n\n    getData(e) {\n        this.setState({ client: [...this.state.client, e] })\n    }\n\n\n    handleSubmit(event) {\n        const {getFieldValue } = this.props.form;\n        const keys = getFieldValue('keys');\n\n\n        \n            if(this.state.sub !== true && this.state.res[keys.length -1] !== undefined){\n                this.Final();\n            }\n        \n\n\n        event.preventDefault();\n    }\n\n    getDataForPdf(e) {\n        // var array = [];\n\n        // array.push(e)\n        \n        // var obj = {};\n\n        // //Delete .service\n        // obj.site = e.service;\n        // obj.info = e.info;\n\n        this.setState({ res: [...this.state.res, e] })\n        \n    }\n\n\n\n\n    Final() {\n        var finalData = {}\n        \n        finalData.service = this.state.res\n        finalData.client = this.state.client\n\n        this.setState({\n            sub: true,\n            // final : finalData\n        }\n        )\n\n        // console.log(this.props.text);\n\n        this.props.text(finalData)\n        // console.log(this.props.text);\n        this.props.history.push('/PDF')\n\n    }\n\n    remise(e) {\n        this.setState({ remise: e.target.value })\n\n    }\n\n    addRemise(){\n        if(this.state.showRemise === false){\n\n            for (let i = 0; i < this.state.res.length; i++) {\n                for (let y = 0; y < this.state.res[i].service.length; y++) {\n                    // prixAbo += parseInt(this.state.res[i].service[y][1].Abo_mois_ht.substring(0, this.state.res[i].service[y][1].Abo_mois_ht.length - 2));\n                    console.log(Object.keys(this.state.res[i].service[y]).values());\n                   \n                }\n            }\n\n            this.setState({\n                showRemise: true\n            })    \n        }\n        else{\n            this.setState({\n                showRemise: false\n            })    \n        }\n\n}\n\n    render() {\n        // console.log(this.state.res);\n\n        const { getFieldDecorator, getFieldValue } = this.props.form;\n        const { remise,showRemise } = this.state;\n\n        console.log(prixAbo);\n        console.log(showRemise);\n\n\n        \n        \n        // const formItemLayout = {\n        //     labelCol: {\n        //         xs: { span: 24 },\n        //         sm: { span: 4 },\n        //     },\n        //     wrapperCol: {\n        //         xs: { span: 24 },\n        //         sm: { span: 20 },\n        //     },\n        // };\n        // const formItemLayoutWithOutLabel = {\n        //     wrapperCol: {\n        //         xs: { span: 24, offset: 0 },\n        //         sm: { span: 20, offset: 4 },\n        //     },\n        // };\n\n\n        getFieldDecorator('keys', { initialValue: [] });\n        const keys = getFieldValue('keys');\n        const formItems = keys.map((k, index) => (\n\n            <div key={k}>\n                <Form.Item className=\"row\" style={{ marginTop: '1%' }}\n                    // {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n                    // label={index === 0 ? '' : ''}\n                    required={false}\n                    key={k}\n                >\n                    {/* {getFieldDecorator(`names[${k}]`, {\n                        validateTrigger: ['onChange', 'onBlur'],\n                        rules: [\n                            {\n                                required: true,\n                                whitespace: true,\n                                message: \"Veuillez remplir tout les champs avant de pouvoir créer le devis\",\n                            },\n                        ],\n                    })\n                        ( */}\n\n                    <div>\n                        <hr></hr>\n                        <div className=\"\">\n                            {/* <label className=\"label ml-3 mt-0\">Formulaire n° {k + 1}</label> */}\n                            <FinalForm getDataForPdf={this.getDataForPdf.bind(this)} />\n                        </div>\n                    </div>\n                    {/* )} */}\n                    {/* {keys.length > 1 ? (\n                        <div className=\"text-center\">\n                            <p className=\"p delete\">Supprimer le service n° {k + 1} &nbsp;\n                  <Icon\n                      className=\"dynamic-delete-button\"\n                      type=\"minus-circle-o\"\n                      onClick={() => this.remove(k)}\n                    />\n                  </p>\n                        </div>\n                    ) : null} */}\n                </Form.Item>\n            </div>\n                \n        ));\n            \n\n        if (this.state.res[keys.length - 1 ] !== undefined && this.state.client.length !== 0) {\n\n            if (this.state.sub === true) {\n                type = \"warning\"\n                title = \"Attention !\"\n                message = \"Votre devis est deja prêt\"\n                \n            } else {\n                type = 'success'\n                title = \"Visualisation de votre devis\"\n                message = \"Si le devis vous convient vous pouvez le télécharger en cliquant sur le bouton en bas de page\"\n                duration = 4\n            }\n\n        }\n        else {\n            type = 'info'\n            title = \"Oups ...\"\n            message = \"Vous devez remplir toute les informations sur la page avant de convertir les données en PDF..\"\n        }\n\n        const openNotificationWithIcon = (type) => {\n            notification[type]({\n                message: title,\n                description: message,\n                duration: duration,\n            });\n        };\n\n\n        return (\n            <div className=\"bgForm p-5\" style={{ height: '100vh', padding:\"50vh\"}}>\n            <div className=\"blur \"></div>\n            <div className=\"divForm \"   style={{height:'90vh',overflowY: \"scroll\",scrollbarWidth: 'none', borderRadius: \"15px\", boxShadow: '5px 10px 5px rgba(0,0,0,0.25)' }}>\n            <div className=\" contenu\" style={{ marginTop:\"5%\",   zIndex: 1}}   >\n            <h2 className=\"text-center\" style={{ marginBottom: \"5vh\" }}>Création de devis</h2>\n                <form onSubmit={this.handleSubmit.bind(this)} >\n                    <Client getData={this.getData.bind(this)} />\n                    {/* <FinalForm getDataForPdf={this.getDataForPdf.bind(this)} /> */}\n\n                    <div className=\"\">\n                        <div className=\"\">\n                            {formItems}\n                            {/* <button onClick={this.getKey.bind(this)}>getKey</button> */}\n                        </div>\n                        <div className=\"text-center container\">\n                            <Button  className=\"btn_add\" onClick={this.add} style={{ width: '20%', marginBottom: '2vh', marginTop: '2vh' }}>\n                                <Icon type=\"plus-circle\" className=\"iconPlus\" style={{ fontSize:'15px', color:\"#4283C6\", position:\"relative\", bottom:\"2.5px\"}}/>\n                                Ajouter un nouveau site\n                        </Button>\n                        <div className=\"row\">\n                        <div className=\"col-3\"></div>\n\n                            <div className=\"col-6\">\n\n                            {\n                                this.state.showRemise === true ?\n                                <div>\n                                <Input \n                                placeholder=\"Remise en %\"\n                                type=\"text\"\n                                value={remise}\n                                onChange={this.remise.bind(this)}\n                                ></Input>\n                                <p>Prix Abo : { prixAbo } € </p>\n                                <p>Prix total avec remise : </p>\n                                <div>\n                                    Annuler la remise &nbsp; <Icon type=\"close\" style={{ color:'red', fontSize:\"20px\"}}onClick={this.addRemise.bind(this)} />\n                                </div>\n                                </div>\n                                :\n                                <button className=\"btn btn-success\" onClick={ this.addRemise.bind(this) }>Ajouter une remise</button>\n                            }\n\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                    <div className=\"text-center\">\n                        <input onClick={() => openNotificationWithIcon(type)} className=\"btn btn-light btn_pdf \" type=\"submit\" value=\"Convertir en PDF\" style={{ marginTop: '5%', marginBottom: '5%' ,color:'#4283C6', backgroundColor: 'white', width:'30%', height:\"15%\" }} />\n                    </div>\n                </form>\n            </div>\n            </div>\n            </div>\n        )\n    }\n}\nconst WrappedDynamicFieldSet = Form.create({ name: 'dynamic_form_item' })(NotFound);\nexport default WrappedDynamicFieldSet;"]},"metadata":{},"sourceType":"module"}